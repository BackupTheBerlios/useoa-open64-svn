
PROCEDURE = { < ProcHandle("foo_::foo_"), SymHandle("foo_::foo_") > }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/duudChain/UseOA-Open64/TestCases/Alias/Intrinsic_max.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("do_loop (I:0:.predef_I4<=10)") =>
        [
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( USE, SymHandle("foo_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("I:0:.predef_I4 = 1") =>
        [
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("foo_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("I:0:.predef_I4 = I:0:.predef_I4+1") =>
        [
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("foo_::I"))
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( USE, SymHandle("foo_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("K:0:.predef_I4 = MIN(I:0:.predef_I4,15)") =>
        [
            MemRefHandle("K:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("foo_::K"))
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( USE, SymHandle("foo_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("foo_::foo_"), not local > }
    LOCATION = { < SymHandle("foo_::I"), local > }
    LOCATION = { < SymHandle("foo_::K"), local > }
