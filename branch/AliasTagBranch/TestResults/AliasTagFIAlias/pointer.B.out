file nameTestCases/AliasTagFIAlias/pointer.B

AliasTagResults(
    mMREToTags: OA::OA_ptr<MemRefExpr> 	 => OA::OA_ptr<std::set<AliasTag> > 
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(foo_::P)
                mStrictlyLocal: 1
            )	 => [ 
                Tag(
                    mTagID: 1
                    # NamedRef(foo_::P)
                ) ] 
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(foo_::Q)
                mStrictlyLocal: 1
            )	 => [ 
                Tag(
                    mTagID: 2
                    # NamedRef(foo_::Q)
                    # Deref(NamedRef(foo_::P))
                ) ] 
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(foo_::T)
                mStrictlyLocal: 1
            )	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(foo_::T)
                ) ] 
            
            Deref(
                mMemRefType: USE
                mMRE: 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(foo_::P)
                    mStrictlyLocal: 1
                )
                mNumDeref: 1
            )	 => [ 
                Tag(
                    mTagID: 2
                    # NamedRef(foo_::Q)
                    # Deref(NamedRef(foo_::P))
                ) ] 

    mTagToMREs: AliasTag	 => OA::OA_ptr<std::set<OA::OA_ptr<MemRefExpr> > > 
            
            Tag(
                mTagID: 1
                # NamedRef(foo_::P)
            )	 => [ 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(foo_::P)
                    mStrictlyLocal: 1
                ) ] 
            
            Tag(
                mTagID: 2
                # NamedRef(foo_::Q)
                # Deref(NamedRef(foo_::P))
            )	 => [ 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(foo_::Q)
                    mStrictlyLocal: 1
                )    
                Deref(
                    mMemRefType: USE
                    mMRE: 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_::P)
                        mStrictlyLocal: 1
                    )
                    mNumDeref: 1
                ) ] 
            
            Tag(
                mTagID: 3
                # NamedRef(foo_::T)
            )	 => [ 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(foo_::T)
                    mStrictlyLocal: 1
                ) ] 

    mMemRefToTags: MemRefHandle	 => OA::OA_ptr<std::set<AliasTag> > 
            MemRefHandle(P:0:anon_ptr.)	 => [ 
                Tag(
                    mTagID: 1
                    # NamedRef(foo_::P)
                ) ] 
            MemRefHandle(T:0:.predef_I4)	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(foo_::T)
                ) ] 
            MemRefHandle(P:0:anon_ptr.)	 => [ 
                Tag(
                    mTagID: 2
                    # NamedRef(foo_::Q)
                    # Deref(NamedRef(foo_::P))
                ) ] 

    mMREToMustFlag: OA::OA_ptr<MemRefExpr> 	 => bool
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(foo_::P)
                mStrictlyLocal: 1
            )	 => 0
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(foo_::Q)
                mStrictlyLocal: 1
            )	 => 0
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(foo_::T)
                mStrictlyLocal: 1
            )	 => 0
            
            Deref(
                mMemRefType: USE
                mMRE: 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(foo_::P)
                    mStrictlyLocal: 1
                )
                mNumDeref: 1
            )	 => 0

    mMemRefToMustFlag: MemRefHandle	 => bool
            MemRefHandle(P:0:anon_ptr.)	 => 0
            MemRefHandle(T:0:.predef_I4)	 => 0
            MemRefHandle(P:0:anon_ptr.)	 => 0

)
