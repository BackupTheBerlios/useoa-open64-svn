============================================
StmtHandle:  LOC 0 0 source files:	1	"/nfs/mcs-homes15/malusare/Tag/UseOA-Open64/TestCases/ExprTree/call.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: bar_(&A:0:.predef_I4, &B:0:.predef_I4+C:0:.predef_I4, &3)

==> ExprHandle: &A:0:.predef_I4

graph EXPRESSION TREE:

    AddressOf(
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::A)
            mStrictlyLocal: 1
        )
    )

    Node 0: ET MemRefNode (  )


==> ExprHandle: &B:0:.predef_I4+C:0:.predef_I4

graph EXPRESSION TREE:

    AddressOf(
        mMemRefType: USE
        mMRE: 
        UnnamedRef(
            mMemRefType: USE
            mExprHandle: ExprHandle(B:0:.predef_I4+C:0:.predef_I4)
            mLocal: 1
            mProcHandle: ProcHandle(foo_::foo_)
        )
    )

    Node 0: ET MemRefNode (  )


==> ExprHandle: B:0:.predef_I4+C:0:.predef_I4

graph EXPRESSION TREE:

    Node 0: ET OpNode ( OPR_ADD )
    Edge: 
        0 => 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::B)
            mStrictlyLocal: 1
        )

        Node 1: ET MemRefNode (  )
    Edge: 
        0 => 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::C)
            mStrictlyLocal: 1
        )

        Node 2: ET MemRefNode (  )


==> ExprHandle: &3

graph EXPRESSION TREE:

    AddressOf(
        mMemRefType: USE
        mMRE: 
        UnnamedRef(
            mMemRefType: USE
            mExprHandle: ExprHandle(3)
            mLocal: 1
            mProcHandle: ProcHandle(foo_::foo_)
        )
    )

    Node 0: ET MemRefNode (  )


==> ExprHandle: 3

graph EXPRESSION TREE:

    Node 0: ET ConstValNode ( 3 )


============================================
StmtHandle: I8SRCTRIPLET
_ALLOCATE(&D:0:anon_ptr.(), &0)

==> ExprHandle: I8SRCTRIPLET
&D:0:anon_ptr.()
I8SRCTRIPLET

graph EXPRESSION TREE:

    NamedRef(
        mMemRefType: DEF
        mSymHandle: SymHandle(foo_::D)
        mStrictlyLocal: 1
    )

    Node 0: ET MemRefNode (  )


============================================
StmtHandle: T:0:.predef_F4 = func_(&A:0:.predef_I4)

==> ExprHandle: func_(&A:0:.predef_I4)

graph EXPRESSION TREE:

    Node 0: ET CallNode ( func_(&A:0:.predef_I4) )


==> ExprHandle: &A:0:.predef_I4

graph EXPRESSION TREE:

    AddressOf(
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::A)
            mStrictlyLocal: 1
        )
    )

    Node 0: ET MemRefNode (  )


============================================
StmtHandle: A:0:.predef_I4 = TRUNC((OPC_F4I4CVT(A:0:.predef_I4*10)+func_(&B:0:.predef_I4-C:0:.predef_I4)))

==> ExprHandle: TRUNC((OPC_F4I4CVT(A:0:.predef_I4*10)+func_(&B:0:.predef_I4-C:0:.predef_I4)))

graph EXPRESSION TREE:

    Node 0: ET OpNode ( OPR_TRUNC )
    Edge: 
        0 => 
        Node 1: ET OpNode ( OPR_ADD )
        Edge: 
            1 => 
            Node 2: ET OpNode ( OPR_MPY )
            Edge: 
                2 => 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(foo_::A)
                    mStrictlyLocal: 1
                )

                Node 3: ET MemRefNode (  )
            Edge: 
                2 => 
                Node 4: ET ConstValNode ( 10 )
        Edge: 
            1 => 
            Node 5: ET CallNode ( func_(&B:0:.predef_I4-C:0:.predef_I4) )


==> ExprHandle: &B:0:.predef_I4-C:0:.predef_I4

graph EXPRESSION TREE:

    AddressOf(
        mMemRefType: USE
        mMRE: 
        UnnamedRef(
            mMemRefType: USE
            mExprHandle: ExprHandle(B:0:.predef_I4-C:0:.predef_I4)
            mLocal: 1
            mProcHandle: ProcHandle(foo_::foo_)
        )
    )

    Node 0: ET MemRefNode (  )


==> ExprHandle: B:0:.predef_I4-C:0:.predef_I4

graph EXPRESSION TREE:

    Node 0: ET OpNode ( OPR_SUB )
    Edge: 
        0 => 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::B)
            mStrictlyLocal: 1
        )

        Node 1: ET MemRefNode (  )
    Edge: 
        0 => 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(foo_::C)
            mStrictlyLocal: 1
        )

        Node 2: ET MemRefNode (  )


============================================
StmtHandle: return

============================================
StmtHandle: PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: return

============================================
StmtHandle: PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: RES:0:.predef_F8 = N:0:.predef_F8

==> ExprHandle: N:0:.predef_F8

graph EXPRESSION TREE:

    Deref(
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(func_::N)
            mStrictlyLocal: 1
        )
        mNumDeref: 1
    )

    Node 0: ET MemRefNode (  )


============================================
StmtHandle: return (RES:0:.predef_F8)

