file nameTestCases/ICFGDep/expressions.B
 Dep Analysis 

MustDefMap: StmtHandle	 => LocSet

mDepDFSet: StmtHandle	 => DepDFSet
         LOC 0 0 source files:	1	"/nfs/mcs-homes15/malusare/Tag/UseOA-Open64/TestCases/ICFGDep/expressions.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        VUSE <1,20,mytypemodule_>
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: A:0:.predef_I4 = B:0:.predef_I4+C:0:.predef_I4	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                    )
	 => 
                    Tag(
                        mTagID: 1
                        # NamedRef(foo_::A)
                    )

                    
                    Tag(
                        mTagID: 5
                        # NamedRef(foo_::C)
                    )
	 => 
                    Tag(
                        mTagID: 1
                        # NamedRef(foo_::A)
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 1
                        # NamedRef(foo_::A)
                    )
	 => 
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                    )

                    Tag(
                        mTagID: 5
                        # NamedRef(foo_::C)
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 3
                # NamedRef(foo_::B)
            )

            Tag(
                mTagID: 5
                # NamedRef(foo_::C)
            )

            Defs:
            Tag(
                mTagID: 1
                # NamedRef(foo_::A)
            )

        stmt: A:0:.predef_I4 = A:0:.predef_I4+B:0:.predef_I4	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                    )
	 => 
                    Tag(
                        mTagID: 1
                        # NamedRef(foo_::A)
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 1
                        # NamedRef(foo_::A)
                    )
	 => 
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 3
                # NamedRef(foo_::B)
            )

            Defs:
            Tag(
                mTagID: 1
                # NamedRef(foo_::A)
            )

        stmt: ARRAY:0:anon_ptr.(K:0:.predef_I4) = 0:BRRAY:0:anon_ptr.(K:0:.predef_I4)+    10.00000000000000	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 19
                        # NamedRef(foo_::BRRAY)
                        # SubSetRef(NamedRef(foo_::BRRAY))
                    )
	 => 
                    Tag(
                        mTagID: 18
                        # NamedRef(foo_::ARRAY)
                        # SubSetRef(NamedRef(foo_::ARRAY))
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 18
                        # NamedRef(foo_::ARRAY)
                        # SubSetRef(NamedRef(foo_::ARRAY))
                    )
	 => 
                    Tag(
                        mTagID: 19
                        # NamedRef(foo_::BRRAY)
                        # SubSetRef(NamedRef(foo_::BRRAY))
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 19
                # NamedRef(foo_::BRRAY)
                # SubSetRef(NamedRef(foo_::BRRAY))
            )

            Defs:
            Tag(
                mTagID: 18
                # NamedRef(foo_::ARRAY)
                # SubSetRef(NamedRef(foo_::ARRAY))
            )

        U8U8STRCTFLD T<11,.predef_F8,8> T<29,MYTYPE,8> <field_id:1>
stmt:  = X:0:.predef_F8	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 16
                        # NamedRef(foo_::X)
                    )
	 => 
                    Tag(
                        mTagID: 17
                        # NamedRef(foo_::TYPED_Y)
                        # FieldAccess(NamedRef(foo_::TYPED_Y), FIELD1)
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 17
                        # NamedRef(foo_::TYPED_Y)
                        # FieldAccess(NamedRef(foo_::TYPED_Y), FIELD1)
                    )
	 => 
                    Tag(
                        mTagID: 16
                        # NamedRef(foo_::X)
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 16
                # NamedRef(foo_::X)
            )

            Defs:
            Tag(
                mTagID: 17
                # NamedRef(foo_::TYPED_Y)
                # FieldAccess(NamedRef(foo_::TYPED_Y), FIELD1)
            )

        stmt: D:0:.predef_F8 = SIN(&S:0:.predef_F8+    10.00000000000000)	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 10
                        # NamedRef(foo_::S)
                    )
	 => 
                    Tag(
                        mTagID: 6
                        # NamedRef(foo_::D)
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 6
                        # NamedRef(foo_::D)
                    )
	 => 
                    Tag(
                        mTagID: 10
                        # NamedRef(foo_::S)
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 10
                # NamedRef(foo_::S)
            )

            Defs:
            Tag(
                mTagID: 6
                # NamedRef(foo_::D)
            )

        U8PSTID 0 <2,11,P> T<31,anon_ptr.,8>
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: CASSIGNSTMT(&STRING4:0:anon_ptr.(0), &CONCATEXPR(60, &STRING1:0:anon_ptr.(0), &STRING2:0:anon_ptr.(0), &STRING3:0:anon_ptr.(0), 20, 20), 20, 60)	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 20
                        # NamedRef(foo_::STRING1)
                        # SubSetRef(NamedRef(foo_::STRING1))
                    )
	 => 
                    Tag(
                        mTagID: 23
                        # NamedRef(foo_::STRING4)
                        # SubSetRef(NamedRef(foo_::STRING4))
                    )

                    
                    Tag(
                        mTagID: 21
                        # NamedRef(foo_::STRING2)
                        # SubSetRef(NamedRef(foo_::STRING2))
                    )
	 => 
                    Tag(
                        mTagID: 23
                        # NamedRef(foo_::STRING4)
                        # SubSetRef(NamedRef(foo_::STRING4))
                    )

                    
                    Tag(
                        mTagID: 22
                        # NamedRef(foo_::STRING3)
                        # SubSetRef(NamedRef(foo_::STRING3))
                    )
	 => 
                    Tag(
                        mTagID: 23
                        # NamedRef(foo_::STRING4)
                        # SubSetRef(NamedRef(foo_::STRING4))
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 23
                        # NamedRef(foo_::STRING4)
                        # SubSetRef(NamedRef(foo_::STRING4))
                    )
	 => 
                    Tag(
                        mTagID: 20
                        # NamedRef(foo_::STRING1)
                        # SubSetRef(NamedRef(foo_::STRING1))
                    )

                    Tag(
                        mTagID: 21
                        # NamedRef(foo_::STRING2)
                        # SubSetRef(NamedRef(foo_::STRING2))
                    )

                    Tag(
                        mTagID: 22
                        # NamedRef(foo_::STRING3)
                        # SubSetRef(NamedRef(foo_::STRING3))
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 20
                # NamedRef(foo_::STRING1)
                # SubSetRef(NamedRef(foo_::STRING1))
            )

            Tag(
                mTagID: 21
                # NamedRef(foo_::STRING2)
                # SubSetRef(NamedRef(foo_::STRING2))
            )

            Tag(
                mTagID: 22
                # NamedRef(foo_::STRING3)
                # SubSetRef(NamedRef(foo_::STRING3))
            )

            Defs:
            Tag(
                mTagID: 23
                # NamedRef(foo_::STRING4)
                # SubSetRef(NamedRef(foo_::STRING4))
            )

        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
