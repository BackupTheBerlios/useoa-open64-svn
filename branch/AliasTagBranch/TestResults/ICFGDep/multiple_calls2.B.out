file nameTestCases/ICFGDep/multiple_calls2.B
 Dep Analysis 

MustDefMap: StmtHandle	 => LocSet

mDepDFSet: StmtHandle	 => DepDFSet
         LOC 0 0 source files:	1	"/nfs/mcs-homes15/malusare/Tag/UseOA-Open64/TestCases/ICFGDep/multiple_calls2.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: bar_(&X:0:.predef_F8, &A:0:.predef_F8, &B:0:.predef_F8)	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: bar_(&X:0:.predef_F8, &A:0:.predef_F8, &B:0:.predef_F8)	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: B:0:.predef_F8 = F:0:.predef_F8	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 4
                        # NamedRef(foo_::X)
                        # Deref(NamedRef(bar_::F))
                    )
	 => 
                    Tag(
                        mTagID: 2
                        # NamedRef(foo_::A)
                        # Deref(NamedRef(bar_::B))
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 2
                        # NamedRef(foo_::A)
                        # Deref(NamedRef(bar_::B))
                    )
	 => 
                    Tag(
                        mTagID: 4
                        # NamedRef(foo_::X)
                        # Deref(NamedRef(bar_::F))
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 4
                # NamedRef(foo_::X)
                # Deref(NamedRef(bar_::F))
            )

            Defs:
            Tag(
                mTagID: 2
                # NamedRef(foo_::A)
                # Deref(NamedRef(bar_::B))
            )

        stmt: G:0:.predef_F8 = B:0:.predef_F8	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 2
                        # NamedRef(foo_::A)
                        # Deref(NamedRef(bar_::B))
                    )
	 => 
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                        # Deref(NamedRef(bar_::G))
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 3
                        # NamedRef(foo_::B)
                        # Deref(NamedRef(bar_::G))
                    )
	 => 
                    Tag(
                        mTagID: 2
                        # NamedRef(foo_::A)
                        # Deref(NamedRef(bar_::B))
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 2
                # NamedRef(foo_::A)
                # Deref(NamedRef(bar_::B))
            )

            Defs:
            Tag(
                mTagID: 3
                # NamedRef(foo_::B)
                # Deref(NamedRef(bar_::G))
            )

        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
