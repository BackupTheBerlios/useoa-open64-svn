 Dep Analysis 

MustDefMap: StmtHandle	 => LocSet

mDepDFSet: StmtHandle	 => DepDFSet
         LOC 0 0 source files:	1	"/nfs/mcs-homes15/malusare/Tag/UseOA-Open64/TestCases/ICFGDep/sideEffect_3.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: D:0:.predef_F8 = C:0:.predef_F8*C:0:.predef_F8	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet
                    
                    Tag(
                        mTagID: 15
                        # Deref(NamedRef(bar_::C))
                        # Deref(NamedRef(foo_::A))
                        # Deref(NamedRef(head_::X))
                        # SubSetRef(Deref(NamedRef(head_::X)))
                    )
	 => 
                    Tag(
                        mTagID: 16
                        # Deref(NamedRef(bar_::D))
                        # Deref(NamedRef(foo_::B))
                        # Deref(NamedRef(head_::Y))
                        # SubSetRef(Deref(NamedRef(head_::Y)))
                    )


            mDefToUsesMap: DefLoc	 => UseLocSet
                    
                    Tag(
                        mTagID: 16
                        # Deref(NamedRef(bar_::D))
                        # Deref(NamedRef(foo_::B))
                        # Deref(NamedRef(head_::Y))
                        # SubSetRef(Deref(NamedRef(head_::Y)))
                    )
	 => 
                    Tag(
                        mTagID: 15
                        # Deref(NamedRef(bar_::C))
                        # Deref(NamedRef(foo_::A))
                        # Deref(NamedRef(head_::X))
                        # SubSetRef(Deref(NamedRef(head_::X)))
                    )


            ImplicitRemoves:
            Uses:
            Tag(
                mTagID: 15
                # Deref(NamedRef(bar_::C))
                # Deref(NamedRef(foo_::A))
                # Deref(NamedRef(head_::X))
                # SubSetRef(Deref(NamedRef(head_::X)))
            )

            Defs:
            Tag(
                mTagID: 16
                # Deref(NamedRef(bar_::D))
                # Deref(NamedRef(foo_::B))
                # Deref(NamedRef(head_::Y))
                # SubSetRef(Deref(NamedRef(head_::Y)))
            )

        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: bar_(&A:0:.predef_F8, &B:0:.predef_F8)	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
stmt: 	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: foo_(&X:0:anon_ptr.(1), &Y:0:anon_ptr.(1))	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
        stmt: return	 => Inside DepDFSet output

            mUseToDefsMap: UseLoc	 => DefLocSet

            mDefToUsesMap: DefLoc	 => UseLocSet

            ImplicitRemoves:
            Uses:
            Defs:
