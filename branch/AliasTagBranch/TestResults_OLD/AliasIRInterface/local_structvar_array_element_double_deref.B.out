
PROCEDURE = { < ProcHandle("mymodule_::mymodule_"), SymHandle("mymodule_::mymodule_") > }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/MemRefExpr/UseOA-Open64/TestCases/Alias/local_structvar_array_element_double_deref.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    LOCATION = { < SymHandle("mymodule_::mymodule_"), not local > }

PROCEDURE = { < ProcHandle("mymodule_::foo_"), SymHandle("mymodule_::foo_") > }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("VUSE <1,20,mymodule_>
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("U8U8STRCTFLD T<31,.array.,4> T<30,REPAIR_BILL,8> <field_id:1>
X:0:anon_ptr.(1:1:20) = 0:(1:1:20)") =>
        [
            MemRefHandle("X:0:anon_ptr.(1:1:20)") => 
                SubSetRef( DEF, NamedRef( USE, SymHandle("foo_::X")))
            MemRefHandle("U8U8STRCTFLD T<31,.array.,4> T<30,REPAIR_BILL,8> <field_id:1>
0:(1:1:20)") => 
                SubSetRef( USE, FieldAccess( USE, FieldAccess( USE, NamedRef( USE, SymHandle("foo_::RED_FERRARI")), COST), PARTS))
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("mymodule_::mymodule_"), not local > }
    LOCATION = { < SymHandle("mymodule_::foo_"), not local > }
    LOCATION = { < SymHandle("foo_::RED_FERRARI"), local > }
    LOCATION = { < SymHandle("foo_::X"), local > }
