
graph ICFG:

    subgraph factorial__0:

        Node 1: 
            ==  ICFG ENTRY_NODE 1 ==


        Node 2: 
             LOC 0 0 source files:	1	"/s/parsons/c/fac/mstrout/OA/armstrong-gcc-3.3.6/UseOA-Open64/TestCases/CallGraph/functions2.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 2 ==

if (N:0:.predef_I4==1)


        Node 3: 
            ==  ICFG CFLOW_NODE 3 ==
RES:0:.predef_I4 = 1


        Node 4: 
            ==  ICFG CALL_NODE 4 ==
RES:0:.predef_I4 = N:0:.predef_I4*factorial_(&N:0:.predef_I4+-1)


        Node 5: 
            ==  ICFG RETURN_NODE 5 ==


        Node 6: 
            ==  ICFG EXIT_NODE 6 ==


        Node 7: 
            ==  ICFG CFLOW_NODE 7 ==
return (RES:0:.predef_I4)


        Edge: 4 => 5
            CALL_RETURN

        Edge: 4 => 1
            CALL_(factorial_(&N:0:.predef_I4+-1)),style=dashed,color=red

        Edge: 6 => 5
            RETURN_(factorial_(&N:0:.predef_I4+-1)),style=dashed,color=blue

        Edge: 1 => 2
            

        Edge: 2 => 3
            

        Edge: 2 => 4
            

        Edge: 7 => 6
            

        Edge: 3 => 7
            

        Edge: 5 => 7
            


    subgraph recfunc__1:

        Node 8: 
            ==  ICFG ENTRY_NODE 8 == (entry)


        Node 9: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 9 ==



        Node 10: 
            ==  ICFG CALL_NODE 10 ==
N:0:.predef_I4 = TRUNC(factorial_(&N:0:.predef_I4))


        Node 11: 
            ==  ICFG RETURN_NODE 11 ==


        Node 12: 
            ==  ICFG CFLOW_NODE 12 ==
_END()
return


        Node 13: 
            ==  ICFG CFLOW_NODE 13 == (entry)
return


        Node 14: 
            ==  ICFG EXIT_NODE 14 == (exit)


        Edge: 9 => 10
            

        Edge: 10 => 11
            CALL_RETURN

        Edge: 11 => 12
            

        Edge: 8 => 9
            

        Edge: 12 => 14
            

        Edge: 13 => 14
            


    Edge: 10 => 1
        CALL_(factorial_(&N:0:.predef_I4)),style=dashed,color=red

    Edge: 6 => 11
        RETURN_(factorial_(&N:0:.predef_I4)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_factorial__0 {
        label="factorial__0"
        1 [ label="==  ICFG ENTRY_NODE 1 ==\n" ];
        2 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 2 ==\n\nif (N:0:.predef_I4==1)\n" ];
        3 [ label="==  ICFG CFLOW_NODE 3 ==\nRES:0:.predef_I4 = 1\n" ];
        4 [ label="==  ICFG CALL_NODE 4 ==\nRES:0:.predef_I4 = N:0:.predef_I4*factorial_(&N:0:.predef_I4+-1)\n" ];
        5 [ label="==  ICFG RETURN_NODE 5 ==\n" ];
        6 [ label="==  ICFG EXIT_NODE 6 ==\n" ];
        7 [ label="==  ICFG CFLOW_NODE 7 ==\nreturn (RES:0:.predef_I4)\n" ];
        4 -> 5 [ label="CALL_RETURN" ];
        4 -> 1 [ label="CALL_(factorial_(&N:0:.predef_I4+-1))",style=dashed,color=red ];
        6 -> 5 [ label="RETURN_(factorial_(&N:0:.predef_I4+-1))",style=dashed,color=blue ];
        1 -> 2 [ label="" ];
        2 -> 3 [ label="" ];
        2 -> 4 [ label="" ];
        7 -> 6 [ label="" ];
        3 -> 7 [ label="" ];
        5 -> 7 [ label="" ];
    }
    subgraph cluster_recfunc__1 {
        label="recfunc__1"
        8 [ label="==  ICFG ENTRY_NODE 8 == (entry)\n" ];
        9 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 9 ==\n\n" ];
        10 [ label="==  ICFG CALL_NODE 10 ==\nN:0:.predef_I4 = TRUNC(factorial_(&N:0:.predef_I4))\n" ];
        11 [ label="==  ICFG RETURN_NODE 11 ==\n" ];
        12 [ label="==  ICFG CFLOW_NODE 12 ==\n_END()\nreturn\n" ];
        13 [ label="==  ICFG CFLOW_NODE 13 == (entry)\nreturn\n" ];
        14 [ label="==  ICFG EXIT_NODE 14 == (exit)\n" ];
        9 -> 10 [ label="" ];
        10 -> 11 [ label="CALL_RETURN" ];
        11 -> 12 [ label="" ];
        8 -> 9 [ label="" ];
        12 -> 14 [ label="" ];
        13 -> 14 [ label="" ];
    }
    10 -> 1 [ label="CALL_(factorial_(&N:0:.predef_I4))",style=dashed,color=red ];
    6 -> 11 [ label="RETURN_(factorial_(&N:0:.predef_I4))",style=dashed,color=blue ];}
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
