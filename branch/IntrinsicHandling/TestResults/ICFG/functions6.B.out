
graph ICFG:

    subgraph bar__0:

        Node 12: 
            ==  ICFG ENTRY_NODE 12 ==


        Node 13: 
             LOC 0 0 source files:	1	"/s/parsons/c/fac/mstrout/OA/armstrong-gcc-3.3.6/UseOA-Open64/TestCases/CallGraph/functions6.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 13 ==

if (N:0:.predef_I4==1)


        Node 14: 
            ==  ICFG CFLOW_NODE 14 ==
RES:0:.predef_I4 = 1


        Node 17: 
            ==  ICFG CALL_NODE 17 ==
RES:0:.predef_I4 = TRUNC(foo_(&5))


        Node 19: 
            ==  ICFG RETURN_NODE 19 ==


        Node 28: 
            ==  ICFG CFLOW_NODE 28 ==
return (RES:0:.predef_I4)


        Node 29: 
            ==  ICFG EXIT_NODE 29 ==


        Edge: 17 => 19
            CALL_RETURN

        Edge: 12 => 13
            

        Edge: 13 => 14
            

        Edge: 13 => 17
            

        Edge: 14 => 28
            

        Edge: 19 => 28
            

        Edge: 28 => 29
            


    subgraph foo__1:

        Node 26: 
            ==  ICFG ENTRY_NODE 26 ==


        Node 27: 
            ==  ICFG EXIT_NODE 27 ==


        Node 30: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 30 ==

if (N:0:.predef_I4==1)


        Node 33: 
            ==  ICFG CALL_NODE 33 ==
RES:0:.predef_I4 = TRUNC(bar_(&1))


        Node 35: 
            ==  ICFG RETURN_NODE 35 ==


        Node 36: 
            ==  ICFG CFLOW_NODE 36 ==
RES:0:.predef_I4 = 5


        Node 37: 
            ==  ICFG CFLOW_NODE 37 ==
return (RES:0:.predef_I4)


        Edge: 33 => 35
            CALL_RETURN

        Edge: 37 => 27
            

        Edge: 26 => 30
            

        Edge: 30 => 33
            

        Edge: 30 => 36
            

        Edge: 35 => 37
            

        Edge: 36 => 37
            


    subgraph functiontest__2:

        Node 42: 
            ==  ICFG ENTRY_NODE 42 == (entry)


        Node 46: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 46 ==



        Node 47: 
            ==  ICFG CALL_NODE 47 ==
N:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))


        Node 49: 
            ==  ICFG RETURN_NODE 49 ==


        Node 50: 
            ==  ICFG CFLOW_NODE 50 ==
X:0:.predef_F4 = SIN(&X:0:.predef_F4)
_END()
return


        Node 51: 
            ==  ICFG CFLOW_NODE 51 == (entry)
return


        Node 52: 
            ==  ICFG EXIT_NODE 52 == (exit)


        Edge: 46 => 47
            

        Edge: 47 => 49
            CALL_RETURN

        Edge: 49 => 50
            

        Edge: 42 => 46
            

        Edge: 50 => 52
            

        Edge: 51 => 52
            


    Edge: 17 => 26
        CALL_(foo_(&5)),style=dashed,color=red

    Edge: 27 => 19
        RETURN_(foo_(&5)),style=dashed,color=blue

    Edge: 33 => 12
        CALL_(bar_(&1)),style=dashed,color=red

    Edge: 29 => 35
        RETURN_(bar_(&1)),style=dashed,color=blue

    Edge: 47 => 26
        CALL_(foo_(&N:0:.predef_I4)),style=dashed,color=red

    Edge: 27 => 49
        RETURN_(foo_(&N:0:.predef_I4)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_bar__0 {
        label="bar__0"
        12 [ label="==  ICFG ENTRY_NODE 12 ==\n" ];
        13 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 13 ==\n\nif (N:0:.predef_I4==1)\n" ];
        14 [ label="==  ICFG CFLOW_NODE 14 ==\nRES:0:.predef_I4 = 1\n" ];
        17 [ label="==  ICFG CALL_NODE 17 ==\nRES:0:.predef_I4 = TRUNC(foo_(&5))\n" ];
        19 [ label="==  ICFG RETURN_NODE 19 ==\n" ];
        28 [ label="==  ICFG CFLOW_NODE 28 ==\nreturn (RES:0:.predef_I4)\n" ];
        29 [ label="==  ICFG EXIT_NODE 29 ==\n" ];
        17 -> 19 [ label="CALL_RETURN" ];
        12 -> 13 [ label="" ];
        13 -> 14 [ label="" ];
        13 -> 17 [ label="" ];
        14 -> 28 [ label="" ];
        19 -> 28 [ label="" ];
        28 -> 29 [ label="" ];
    }
    subgraph cluster_foo__1 {
        label="foo__1"
        26 [ label="==  ICFG ENTRY_NODE 26 ==\n" ];
        27 [ label="==  ICFG EXIT_NODE 27 ==\n" ];
        30 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 30 ==\n\nif (N:0:.predef_I4==1)\n" ];
        33 [ label="==  ICFG CALL_NODE 33 ==\nRES:0:.predef_I4 = TRUNC(bar_(&1))\n" ];
        35 [ label="==  ICFG RETURN_NODE 35 ==\n" ];
        36 [ label="==  ICFG CFLOW_NODE 36 ==\nRES:0:.predef_I4 = 5\n" ];
        37 [ label="==  ICFG CFLOW_NODE 37 ==\nreturn (RES:0:.predef_I4)\n" ];
        33 -> 35 [ label="CALL_RETURN" ];
        37 -> 27 [ label="" ];
        26 -> 30 [ label="" ];
        30 -> 33 [ label="" ];
        30 -> 36 [ label="" ];
        35 -> 37 [ label="" ];
        36 -> 37 [ label="" ];
    }
    subgraph cluster_functiontest__2 {
        label="functiontest__2"
        42 [ label="==  ICFG ENTRY_NODE 42 == (entry)\n" ];
        46 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 46 ==\n\n" ];
        47 [ label="==  ICFG CALL_NODE 47 ==\nN:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))\n" ];
        49 [ label="==  ICFG RETURN_NODE 49 ==\n" ];
        50 [ label="==  ICFG CFLOW_NODE 50 ==\nX:0:.predef_F4 = SIN(&X:0:.predef_F4)\n_END()\nreturn\n" ];
        51 [ label="==  ICFG CFLOW_NODE 51 == (entry)\nreturn\n" ];
        52 [ label="==  ICFG EXIT_NODE 52 == (exit)\n" ];
        46 -> 47 [ label="" ];
        47 -> 49 [ label="CALL_RETURN" ];
        49 -> 50 [ label="" ];
        42 -> 46 [ label="" ];
        50 -> 52 [ label="" ];
        51 -> 52 [ label="" ];
    }
    17 -> 26 [ label="CALL_(foo_(&5))",style=dashed,color=red ];
    27 -> 19 [ label="RETURN_(foo_(&5))",style=dashed,color=blue ];
    33 -> 12 [ label="CALL_(bar_(&1))",style=dashed,color=red ];
    29 -> 35 [ label="RETURN_(bar_(&1))",style=dashed,color=blue ];
    47 -> 26 [ label="CALL_(foo_(&N:0:.predef_I4))",style=dashed,color=red ];
    27 -> 49 [ label="RETURN_(foo_(&N:0:.predef_I4))",style=dashed,color=blue ];}
