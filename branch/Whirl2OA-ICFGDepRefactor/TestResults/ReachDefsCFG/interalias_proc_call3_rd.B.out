
graph DGraph:

    Node 1: 
        ====== CFG node 1 ======


    Node 2: 
         LOC 0 0 source files:	1	"/s/parsons/b/others/lramos/OA/Open64/UseOA-Open64/TestCases/ReachDefs/interalias_proc_call3_rd.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 2 ======

head_(&T1:0:.predef_F8, &T2:0:.predef_F8)
_END()
return


    Node 3: 
        ====== CFG node 3 ======
return


    Node 4: 
        ====== CFG node 4 ======


    Edge: 1 => 2
        { 1 FALLTHROUGH_EDGE 0 }

    Edge: 2 => 4
        { 2 RETURN_EDGE 0 }

    Edge: 3 => 4
        { 3 RETURN_EDGE 0 }

--------Dot Graph Output--------

digraph DGraph {
    node [shape=rectangle];
    1 [ label="====== CFG node 1 ======\n" ];
    2 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 2 ======\n\nhead_(&T1:0:.predef_F8, &T2:0:.predef_F8)\n_END()\nreturn\n" ];
    3 [ label="====== CFG node 3 ======\nreturn\n" ];
    4 [ label="====== CFG node 4 ======\n" ];
    1 -> 2 [ label="{ 1 FALLTHROUGH_EDGE 0 }" ];
    2 -> 4 [ label="{ 2 RETURN_EDGE 0 }" ];
    3 -> 4 [ label="{ 3 RETURN_EDGE 0 }" ];}

graph DGraph:

    Node 5: 
        ====== CFG node 5 ======


    Node 6: 
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 6 ======

T1:0:.predef_F8 = X:0:.predef_F8*F:0:.predef_F8
bar_(&T1:0:.predef_F8, &G:0:.predef_F4)
T3:0:.predef_F8 = F:0:.predef_F8*    30.00000000000000
F:0:.predef_F8 = T1:0:.predef_F8+T2:0:.predef_F8
return


    Node 7: 
        ====== CFG node 7 ======


    Edge: 5 => 6
        { 4 FALLTHROUGH_EDGE 0 }

    Edge: 6 => 7
        { 5 RETURN_EDGE 0 }

--------Dot Graph Output--------

digraph DGraph {
    node [shape=rectangle];
    5 [ label="====== CFG node 5 ======\n" ];
    6 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 6 ======\n\nT1:0:.predef_F8 = X:0:.predef_F8*F:0:.predef_F8\nbar_(&T1:0:.predef_F8, &G:0:.predef_F4)\nT3:0:.predef_F8 = F:0:.predef_F8*    30.00000000000000\nF:0:.predef_F8 = T1:0:.predef_F8+T2:0:.predef_F8\nreturn\n" ];
    7 [ label="====== CFG node 7 ======\n" ];
    5 -> 6 [ label="{ 4 FALLTHROUGH_EDGE 0 }" ];
    6 -> 7 [ label="{ 5 RETURN_EDGE 0 }" ];}

graph DGraph:

    Node 8: 
        ====== CFG node 8 ======


    Node 9: 
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 9 ======

B:0:.predef_F8 = OPC_F8F4CVT(G:0:.predef_F4)+A:0:.predef_F8
G:0:.predef_F4 =     1.000000
A:0:.predef_F8 = B:0:.predef_F8
return


    Node 10: 
        ====== CFG node 10 ======
return


    Node 11: 
        ====== CFG node 11 ======


    Edge: 8 => 9
        { 6 FALLTHROUGH_EDGE 0 }

    Edge: 9 => 11
        { 7 RETURN_EDGE 0 }

    Edge: 10 => 11
        { 8 RETURN_EDGE 0 }

--------Dot Graph Output--------

digraph DGraph {
    node [shape=rectangle];
    8 [ label="====== CFG node 8 ======\n" ];
    9 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
====== CFG node 9 ======\n\nB:0:.predef_F8 = OPC_F8F4CVT(G:0:.predef_F4)+A:0:.predef_F8\nG:0:.predef_F4 =     1.000000\nA:0:.predef_F8 = B:0:.predef_F8\nreturn\n" ];
    10 [ label="====== CFG node 10 ======\nreturn\n" ];
    11 [ label="====== CFG node 11 ======\n" ];
    8 -> 9 [ label="{ 6 FALLTHROUGH_EDGE 0 }" ];
    9 -> 11 [ label="{ 7 RETURN_EDGE 0 }" ];
    10 -> 11 [ label="{ 8 RETURN_EDGE 0 }" ];}
