
PROCEDURE = { < ProcHandle("arraypointer_::arraypointer_"), SymHandle("arraypointer_::arraypointer_") > }
    FORMALS = {
        [
            < 0, SymHandle("arraypointer_::P") >
        ] }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/MemRefExpr/UseOA-Open64/TestCases/MemRefExpr/allocate_formalpointertoarrayAsactualsection.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("I8SRCTRIPLET
_ALLOCATE(&P:0:anon_ptr.(), &0)") =>
        [
            MemRefHandle("I8SRCTRIPLET
&P:0:anon_ptr.()") => 
                Deref( DEF, NamedRef( USE, SymHandle("arraypointer_::P")), 1)
            MemRefHandle("I8SRCTRIPLET
P:0:anon_ptr.()") => 
                AddressOf( USE, UnnamedRef( USE, ExprHandle("I8SRCTRIPLET
&P:0:anon_ptr.()"), 1, ProcHandle("arraypointer_::arraypointer_")))
        ] }
    PTRASSIGNPAIRS = { StmtHandle("I8SRCTRIPLET
_ALLOCATE(&P:0:anon_ptr.(), &0)") =>
        [
            < Deref( DEF, NamedRef( USE, SymHandle("arraypointer_::P")), 1)
            , AddressOf( USE, UnnamedRef( USE, ExprHandle("I8SRCTRIPLET
&P:0:anon_ptr.()"), 1, ProcHandle("arraypointer_::arraypointer_"))) >
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("arraypointer_::arraypointer_"), not local > }
    LOCATION = { < SymHandle("arraypointer_::P"), local > }
