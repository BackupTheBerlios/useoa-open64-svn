========================================================

stmt :  LOC 0 0 source files:	1	"/home/malusare/MemRefExpr/UseOA-Open64/TestCases/ExprTree/if.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : if (A:0:.predef_I4<5)

==> AssignPairs : 




==> Expression Tree(s) : 

1. ExprHandle: A:0:.predef_I4<5

graph EXPRESSION TREE:

    Node 0: ET OpNode ( < )
    Edge: 
        0 => 
        Node 1: ET MemRefNode ( A:0:.predef_I4 )
    Edge: 
        0 => 
        Node 2: ET ConstValNode ( 5 )


==> MemRefHandle:A:0:.predef_I4
	mre: 

NamedRef(
    mMemRefType: USE
    mSymHandle: SymHandle(foo_::A)
)

========================================================

stmt : A:0:.predef_I4 = A:0:.predef_I4+1

==> AssignPairs : 

1. mref = A:0:.predef_I4, 	expr = A:0:.predef_I4+1



==> Expression Tree(s) : 

1. ExprHandle: A:0:.predef_I4+1

graph EXPRESSION TREE:

    Node 0: ET OpNode ( + )
    Edge: 
        0 => 
        Node 1: ET MemRefNode ( A:0:.predef_I4 )
    Edge: 
        0 => 
        Node 2: ET ConstValNode ( 1 )


==> MemRefHandle:A:0:.predef_I4
	mre: 

NamedRef(
    mMemRefType: DEF
    mSymHandle: SymHandle(foo_::A)
)

==> MemRefHandle:A:0:.predef_I4
	mre: 

NamedRef(
    mMemRefType: USE
    mSymHandle: SymHandle(foo_::A)
)

========================================================

stmt : return

==> AssignPairs : 




==> Expression Tree(s) : 

