6/21/06     UseOA-Open64 svn trunk r31    Michelle Strout
    CallGraph regression tests and all other regression tests in
    regressAll.script pass after OpenAnalysis rev 118 changes
    where the CallGraph now uses alias results.

6/28/06     UseOA-Open64 svn trunk r32    Luis Ramos
    test-open64.cpp, removed dump calls from cfg and replaced
    them with cfg->output and outputDOT statements, as used for
    regression tests.

    ReachDefs regression tests results added for CFG analysis.
    Files include: 
    interalias_proc_call3_rd.B, reachdef_if1.B, reachdef_if2.B
    reachdef_loopif1.B 

6/29/06     UseOA-Open64 svn trunk r33    Luis Ramos
    New regressReachDefs with the new endline filter results

7/4/06     UseOA-Open64 svn trunk r34    Michelle Strout
    Minor edits to make things work with OpenAnalysis rev 126.
    - Changed some ExprHandles to CallHandles
    - Outputing the results of ParamBindings, but don't have
      ParamBindings regression tests set up yet.

7/5/06     UseOA-Open64 svn trunk r35    Michelle Strout
    - small change in an std::cout statement in test-open.cpp that 
      was causing some ordering differences in the output when 
      compared accross different compilers.
      This might be similar to the issue that Luis is seeing in the CFG
      output where the CFG node id appears after certain statements.
	
7/5/06     UseOA-Open64 svn trunk r39    Priyadarshini Malusare
	    Added regression tests for Parameter Bindings .
	    - Files Include
                 area_circle.B.out, functions2.B.out, gussian_elimination.B.out,
                 readin.B.out, stat_selection.B.out, array.B.out, functions3.B.out,
	         interalias_proc_call1.B.out, rung_kutta.B.out, subroutine.B.out,
	         divide.B.out, functions6.B.out, Matrix_bits.B.out, solve.B.out,
	         swap.B.out, ETOX.B.out, GCD.B.out, nested_calls_1.B.out, stats.B.out
	    - Added ParamBindings.test, genParamBindings.script,
	      regressParamBinding.script
	    - modified test-open64.cpp that has driver for ParamBindings
	
7/6/06     UseOA-Open64 svn trunk r40    Barbara Kreaseck
     - added the beginnings of regression tests for ICFG
	  - not yet ready for prime time in regressAll.script
          - in script/
                - added ICFG.test, genICFG.script, regressICFG.script
          - in TestCases/
                - added ICFG/, ICFG/nested_calls_1.f, ICFG/nested_calls_1.B
          - in TestResults/
                - added ICFG/


7/7/06     UseOA-Open64 svn trunk r41    Barbara Kreaseck
     - updated UseOA-Open64 regression outputs to work with OpenAnalysis
       trunk r136, which has changes to CallGraph, and output from CallGraph,
       and some extra spaces in outputting a map in general.

        ==> significant output changes in TestResults/CallGraph/*
        ==> spacing changes in outputs in TestResults/AliasMapFIAlias/*
        ==> spacing changes in outputs in TestResults/ParamBindings/*

7/14/06     UseOA-Open64 svn trunk r42    Barbara Kreaseck
    - added regression tests for ICFG, added to regressAll
    - modified CFG and ReachDef output in test-open64.C
    - works with OpenAnalysis r141

7/17/06     UseOA-Open64 svn trunk r43    Barbara Kreaseck
    - re-gen'd ICFG regression output to work with OpenAnalysis trunk r147
    - passes regressAll with OpenAnalysis r147 compiled on Okapi with gcc-3.2

7/19/06     UseOA-Open64 svn trunk r44    Michelle Strout
    - added stuff for regression testing AliasMapXAIF, but it isn't quite
      working yet.  There is something wrong with InvisibleLocs.
    - regressAll works with OpenAnalysis r153

7/20/06     UseOA-Open64 svn trunk r45    Barbara Kreaseck
    - added regression tests for ICFGDep, added to regressAll
    - regressAll works with OpenAnalysis r160 on Okapi with gcc-3.2

7/22/06     UseOA-Open64 svn trunk r46    Luis Ramos
    - added test cases/results for sideeffect analysis, files include:
      -test.f90, swap.f90, stringcmp.f90
    - added regression tests for SideEffect, added to regressAll
    - removed swap.B and stringcmp.B from regressSideEffect due to
      SideEffect not working with Arrays
    - modified test-open64.cpp so that InterSideEffect option called
      its routine and output routine 
    - regressAll works with OpenAnalysis r160 on Okapi with gcc-3.2

7/23/06     UseOA-Open64 svn trunk r47   Priyadarshini Malusare
      - Added TestCases/ReachDefsTests/reachdef_if1.B, 
        TestCases/ReachDefsTests/reachdef_if2.B, TestCases/ReachDefsTests/reachdef_loopif1.B
      - added ReachDefs to regressAll 
	  - passes regressAll with OpenAnalysis trunk r161 compiled on Okapi with gcc-3.2 

7/24/06     UseOA-Open64 svn trunk r48   Priyadarshini Malusare
      - Added TestCases/ReachDefsTests/reachdef_if1.B, TestCases/ReachDefsTests/reachdef_if2.B,
   	    TestCases/ReachDefsTests/reachdef_loopif1.B
      - added ReachDefs to regressAll
      - passes regressAll with OpenAnalysis trunk r161 compiled on Okapi with gcc-3.2

7/24/06     UseOA-Open64 svn trunk r49   Priyadarshini Malusare
      - Modified test-open64.cpp, there was typo in the SideEffect test. 					  

07/24/06    UseOA-Open64 svn trunk r50 Priyadarshini Malusare
      - Modified ChangeLog

8/01/06     UseOA-Open64 svn trunk r52    Barbara Kreaseck
      - changed Open64IRInterface::isParam() to not return true when the
        SymHandle is not in the current symbol table
      - updated ParamBindings regression tests to reflect updated/new output
        associated with OpenAnalysis r166
      - updated ICFG regression tests to reflect new output associated with
        OpenAnalysis r166
      - passes regressAll with OpenAnalysis trunk r166 compiled on Okapi with 
        gcc-3.2

8/01/06     UseOA-Open64 svn trunk r53    Michelle Strout
    Rechecked the alias analysis regression tests whose results
    changed due to r167 of OpenAnalysis.

       
8/01/06     UseOA-Open64 svn trunk r53   Priyadarshini Malusare
      - included ReachConsts driver in test-open64.cpp
      - Added TestCases for ReachConsts Analysis
      - Files committed:
	regressAll.script, genReachConsts.script, 
	regressReachConsts.script, ReachConsts.test, 
	TestResults/ReachConstsTests, test-open64.cpp
      - Added Analysis for TestProgs/constprop_if1.c,
        TestProgs/constprop_if1a.c, TestProgs/constprop_if1b.c,
	TestProgs/constprop_if1c.c, TestProgs/constprop_loop1.c,
	TestProgs/constprop_loop2.c

8/09/06     UseOA-Open64 svn trunk r56    Barbara Kreaseck
      - revitalized the --oa-ICFGActivity test routine, currently testing
        only ICFGUseful.
      - added regression test for ICFGUseful and placed in regressAll script
      - added appropriate TestResults/ICFGUseful subdirectory
      - added TestCases/Activity subdirectory for testing ICFGUseful, and
        in the future: ICFGVaryInActive and ICFGActive.
      - in Open64IRInterface.*pp:
          + replaced getIndepLocIter() with getIndepMemRefExprIter()
          + replaced getDepLocIter() with getDepMemRefExprIter()
      - passes regressAll with OpenAnalysis trunk r178 compiled on Okapi with 
        gcc-3.2

8/10/06     UseOA-Open64 svn trunk r57    Barbara Kreaseck
      - updated the --oa-ICFGActivity test routine
          + now testing ICFGUseful and ICFGVaryInActive
      - added regression test for ICFGVaryInActive
      - removed ICFGUseful regression from regressAll script (since it
        is now broken due to no explicit test runMode for ICFGUseful: it
        shares ICFGActivity)
      - corrected getIndepLocIter() in Open64IRInterface.cpp
      - passes regressAll with OpenAnalysis trunk r180 compiled on Okapi
        with gcc-3.2

8/11/06     UseOA-Open64 svn trunk r58    Barbara Kreaseck
      - updated the --oa-ICFGActivity test routine
          + now does full (conservative) ICFGActive analysis
      - added regression test for ICFGActive
      - commented out three regression tests (SideEffect, ReachDefs, 
	ReachConsts) from regressAll that were broken
	due to OpenAnalysis trunk r181 (breaks will need to be resolved)
      - passes regressAll with OpenAnalysis trunk r182 compiled on Okapi
        with gcc-3.2

8/11/06     UseOA-Open64 svn trunk r59    Barbara Kreaseck
      - re-added the three regression tests (SideEffect, ReachDefs,
        ReachConsts) to regressAll (were not really broken)
      - passes regressAll with OpenAnalysis trunk r185 compiled on Okapi
        with gcc-3.2

8/14/06     UseoA-Open64 svn trunk r60   Priyadarshini Malusare
      -Added TestCase for SideEffect Analysis

8/14/06     UseoA-Open64 svn trunk r61   Priyadarshini Malusare
     -Added Example in the Testcases/SideEffect and its results in
	  TestResult/Sideeffect.

8/14/06     UseOA-Open64 svn trunk r62   Priyadarshini Malusare
     -Fortran2OA output of TestCase Jean.B for SideEffect Analysis.

8/15/06     UseOA-Open64 svn trunk r63    Barbara Kreaseck
      - updated --oa-ICFGActivity test to display iteration numbers
      - updated TestResults/ICFGActivity to match new output from
        OpenAnalysis r186 which uses new ManagerICFGVaryActive
      - passes regressAll with OpenAnalysis trunk r186 compiled on Okapi
        with gcc-3.2
8/18/06	    UseOA-Open64 svn trunk r64    Luis Ramos
      - Args: Added Linearity Analysis Argument
      - test-open64: 
        -Added Linearity Analysis as runMode 30,
        -Added Linearity Analysis OA Test Driver.
      - Open64IRInterface: 
        -Added Routines for LinearityIRInterface
        -Routines are: getLinearityOpType, getLinearityStmtType
        -Changed createExprTree, so that in the statement 
	 if(OPERATOR_is_call(opr)) the root is created as a CallHandle
	 into the CallNode(h) instead of an ExprHandle.
      - TestCases: Added Linearity Test Cases subdirectory 
         TestCases/Linearity, Simple.f90, Simple2.f90, TC1.f90, TC1f.f

8/22/06	    UseOA-Open64 svn trunk r65    Michelle Strout
    - Made the --oa-ExprTree flag work again.

8/22/06	    UseOA-Open64 svn trunk r66    Luis Ramos
    - Added Linearity.test, genLinearity.scrip, regressLinearity.scrip
    - Added Linearity TestResults

8/23/06	    UseOA-Open64 svn trunk r67    Luis Ramos & Priyadarshini Malusare
    - Modified test-open64.cpp for ManagerLinearity and
      ManagerReachDefsStandard respectively.

8/24/06     UseOA-Open64 svn trunk r68   Priyadarshini Malusare
    - Modified test-open64.cpp for New GraphRefactor.
	- Works with OpenAnalysis trunk r210 compiled on Okapi 
      with gcc-3.2.
	- ICFG TestCases are regenerated to satisfy Node Numbers 
      of New GraphRefactor.

8/24/06     UseOA-Open64 svn trunk r70   Priyadarshini Malusare
    - Added driver and TestCases for UDDUChains.
    - passes regressAll with OpenAnalysis trunk r211 compiled 
      on Okapi with gcc-3.2

8/30/06     UseOA-Open64 svn trunk r72   Priyadarshini Malusare
    - Added TestCase fnd TestResult for AliasMapXAIF 
      (interalias_proc_call5.B) 
   
9/1/06     UseOA-Open64 svn trunk r73   Barbara Kreaseck
    - Added ICFGReachConsts regression test
    - passes regressAll with OpenAnalysis trunk r221 compiled 
      on Okapi with gcc-3.2

9/1/06     UseOA-Open64 svn trunk r74  Priyadarshini Malusare
    - Removed ICFG_ReachConsts till linker problem with the 
      ReachConsts get solved.
	- passes regressAll with OpenAnalysis trunk r222 compiled 
      on okapi with gcc-3.2

9/8/06     UseOA-Open64 svn trunk r74 Priyadarshini Malusare
    - Added TestCases and TestResults for UDDUChainsXAIF
    - Added regressAllUDDUChainsXAIF.script, 
      genUDDUChainsXAIF.script, UDDUChains.script

9/8/06     UseOA-Open64 scv trunk r77 Barbara Kreaseck
    - removed regressICFGReachConsts.script from regressAll.script
      (temporarily, as I work on the output)

9/11/06    UseOA-Open64 svn trunk r78 Barbara Kreaseck
    - re-instated regressReachConsts.script and 
      regressICFGReachConsts.script into regressAll.script
    - removed 'Tests' from following subdirectory 
      names (seemed redundant ...)
       + TestCases/ReachConstsTests
       + TestResults/ReachConstsTests

9/14/06     UseOA-Open64 svn trunk r79 Priyadarshini Malusare
    - In Open64IRInterface, in getUseMemRefs() and getDefsMemRefs() 
      added checks so that IRInterface should not report the
      parameters Passed by Reference or Address.

9/21/06     UseOA-Open64 svn trunk r80 Priyadarshini Malusare
    - For Open64IRInterface in the function 
      findAllMemRefsAndMapToMemRefExprs added check 
      (WN_operator(WN_kid0(wn)) == OPR_LDA) ) for OPR_ILOADX.
    - Added testCase for MemRefExpr

10/01/06   UseOA-Open64 svn trunk r81 Priyadarshini Malusare
    - Added driver for Context-Sensitive and Flow-Insensitive 
      Activity Analysis in test-open64.cpp under option 
      InterActive.
    - Added 2 header files in the test-open64.cpp
      #include <OpenAnalysis/DUG/ManagerDUGStandard.hpp>
      #include <OpenAnalysis/duaa/ManagerDUActive.hpp>
    - Added #include <OpenAnalysis/IRInterface/DUGIRInterface.hpp>
      in Open64IRInterface.hpp
    - Modify Open64IRInterface class to inherit virtually from
      OA::DUG::DUGIRInterface.
    - Added testCases from OpenAD into TestCases/CSFIActivity 
      Context-Sensitive, Flow-Insensitive Activity 
    - Added scripts InterActive.test and genInterActive.script 
      and regressInterActive.script. 

10/01/06   UseOA-Open64 svn trunk r82 Priyadarshini Malusare
    - added TestCases and TestResults for Context-Sensitive and Flow
      insensitive Activity Analysis. new directories are 
      TestCases/CSFIActivity and TestCases/CSFIActivity
    - added scripts for this analysis as follows:
      script/InterActive.test, script/genInterActive.script,
      script/regressInterActive.script.
    - Works with OpenAnalysis trunk r210 compiled on Okapi
      with gcc-3.2.
    - Added TestCases and TestResults for MemRefExpr

10/13/06   UseOA-Open64 svn trunk r88 Priyadarshini Malusare
    - Modifications in Open64IRInterface.cpp
    - any operations that don't have an lval will go to default 
      case in findAllMemRefsAndMapToMemRefExprs, if there is something 
      being passed by reference that does not have an lval then we
      generate an UnnamedRef set its address flag for use as the 
      parameter.  
    - In the createExprTree check if 
      sMemRef2mreSetMap[MemRefHandle((OA::irhandle_t)wn)] is not empty.  
      If it is not empty then create a MemRefNode instead of an OpNode.
      This is just a temporary adjustment. We are going to replace this 
      with Assignment Pairs.

10/16/06   UseOA-Open64 svn trunk r89 Priyadarshini Malusare
    - Missing Parameter binding for variables New_Y_1 and S2 at 
      Callsite FUN(T+H3,New_Y_1,S2,N). In order to get Param Binding
      pairs, in the Open64IRInterface, we removed this condition  
      "if (opr == OPR_ILOAD && WN_operator(WN_kid0(wn)) == OPR_ARRAY)",
      we created a seperate findTopMemRefHandle() which call
      itself recursively to find MemRefHandle that is mapped to 
      sMemref2mreSetMap. In Open64IRInterface::createExpr(), 
      if opr=ILOAD we call findTopMemRefExpr to find correct 
      MemRefHandle for the root node.

10/16/06   UseOA-Open64 svn trunk r89 Priyadarshini Malusare
    - Modified small bug while converting MemRefHandle to whirl node
      in findtopMemRefHandle that my compiler 3.3.2 did not catch
      but Jeans compiler gave error.

10/18/06   UseOA-Open64 svn trunk r97 Priyadarshini Malusare
    - Regerated ParamBinding Tests because modifications in 
      open64IRInterface e.g. findTopMemRefHandle caused slight
      changes in the representation of ParamBinding Analysis.
      as follows:
      SymHandle(A)   => MemRefHandle(0:A:0:anon_ptr.) Changed to
      SymHandle(A)   => MemRefHandle(A:0:anon_ptr.)

10/25/06   UseOA-Open64 svn trunk r110 Luis Ramos
    - Added OutputExprTreeVisitor for visiting the ExprTree
    - Modified ExprTree so that the output routine accepts
      a OutputExprTreeVisitor to it's root node and traverses
      the tree outputing each node it visits for more accurate
      output
    - ExprTree::Output now more closely represents that of a
      tree. It includes node numbers and edges if needed.
    - Added several different tests for ExprTree
    - Added ExprTree TestCases and TestResults Folder and made
      it part of the regressAll.script
    - Regenerated ParamBindings and SideEffect Tests due to 
      changes in ExprTree::output routines

10/26/06   UseOA-Open64 svn trunk r111 Priyadarshini Malusare
    - There is output sequence mismatch for La-Serra machine and 
      okapi. As okapi is main regression machine, output for
      ExprTree is regenerated for okapi.
    - passes regressAll with OpenAnalysis trunk r247 compiled
      on Okapi with gcc-3.2

10/27/06   UseOA-Open64 svn trunk r113 Priyadarshini Malusare
    - Merged te memRefExprRefactor branch into the trunk in
      revision r112.

10/27/06   UseOA-Open64 svn trunk r115 Priyadarshini Malusare
    - Added convertSymToMemRefExpr(OA::SymHandle sym) for
      activity lookup.

11/09/06   UseOA-Open64 svn trunk r119 Priyadarshini Malusare
    - Regenerated following testcases for MemRefExpr after 
      fixing the problem of MemRefExpr for formal Parameters
      as Actuals in the Procedure.
      1. formal_array_actual, 2. formal_array_actual_in,
      3. formal_array_actual_out 4. formal_array_actual_inout
      5. rung_kutta
 
11/09/06   UseOA-Open64 svn trunk r120 Luis Ramos
    - Changed how expression tress are genarated in respect to 
      intrinsic calls. An intrinsic call is not an OpNode other
      than a CallNode. Sin(a+b) is now OpNode(sin) with Children
      OpNode(+) with Children MemRef(a) and MemRef(b).
    - Regenerated the TestCases for ExprTree and others affected
      by this change.
    - Added two more TestCases to test the difference between
      intrinsics and regular functions.
					  
11/15/06   UseOA-Open64 svn trunk r121 Luis Ramos
    - Regenerated ICFGDep test cases. Before intrinsics did not
      generate any DEFS or USES but after the Intrinsic change
      ICFGDep reports correct DEFS and USES for intrinsic calls.

11/28/06   UseOA-Open64 svn trunk r122 Priyadarshini Malusare
    - We worked to get correct MemRefExprs. We tried several examples
	  and analyzed different patterns from whirl intermediate 
	  reprsenation for every sample case and developed logic
	  to generate MemRefExpr at different whirl node.
	  Detail information is available on wiki.
	  Please refer. 
	  http://www-unix.mcs.anl.gov/OpenAnalysisWiki/moin.cgi/Problem_20of_20Partial_20accuracy_20for_20namedRef_20arrays_20as_20reference_20parameter_2e
	  
	  Modify following functionalities in Open64IRInterface
      1. findAllMemRefsAndMapToMemRefExprs
      2. findTopMemRefHandle
      3. createAndMapNamedRef
      4. createAndMapDeRef
      5. createExprTree
    - added many TestsCases to AliasIRInterface and MemRefExpr tests.

11/28/06   UseOA-Open64 svn trunk r123 Priyadarshini Malusare
    - Added missing TestResults for AliasIRInterface

11/29/06   UseOA-Open64 svn trunk r124 Priyadarshini Malusare
    - fixed MemrefExpr for expressions passed as parameters to 
      intrinsics and non-intrinsics functions.
    - fixed addressOf=false for the MemRefExpr passed as 
      parameters to Intrinsic functions.
    -Regenerated some TestCases for MemRefExpr and AliasIRInterface.
    -regressAll works with OpenAnalysis r255 on Okapi with gcc-3.2

12/02/06   UseOA-Open64 svn trunk r127 Priyadarshini Malusare
   - Modified Open64IRInterface::DumpWN() to print scope i.e. Procedure
     name.

12/03/06   UseOA-Open64 svn trunk r128 Priyadarshini Malusare
   - Added --oa-CSFIActivity option for Context-Sensitive and 
     Flow-Insensitive Activity Analysis.  
   - Modify isRefParam() in 
     Open64IRInterface::getIndepMemRefExprIterator and
     Open64IRInterface::getDepMemrefExprIterator wrt new 
     changes for MemRefExpr in UseOA-Open64 revision 122.
   - Regenerated TestCases for CSFIActivity.	 
   - regressAll works with OpenAnalysis r258 on Okapi with gcc-3.2

12/05/06   UseOA-Open64 svn trunk r134 Priyadarshini Malusare
   - regenerated following testcases to handle changes in the SymHandle
     printing. New SymHandle print includes scope information
     e.g. ProcHandle :: SymHandle. 
   - Changes to getDepMemRefExpr::isRefParam to create proper MemRefExpr.
   - Added Case statement for OPR_NEG in Open64IRInterface::findAllMemRefs..

12/06/06   UseOA-Open64 svn trunk r135 Priyadarshini Malusare
   - Modified Open6IRInterface::findExprStmtPairs, with nospecial case
     for array references.
   - Regenerated TestCases for ICFGActive.

12/06/06   UseOA-Open64 svn trunk r136 Priyadarshini Malusare
   - Changes in Open64IRInterface because ExprStmtPair is
     renamed as AssignPair.

12/07/06   UseOA-Open64 svn trunk r137 Luis Ramos
   - Changed createExprTree for OPR_PARM and others so that it checks
     if the node is part of sMemref2mrefSet in order to stop recursion
     on the ExprTree.

12/09/06   UseOA-Open64 svn trunk r139 Priyadarshini Malusare
   - Modified Open64IRInterface::findAllMemRefExprs::OPR_INTRINSIC_CALL
     as follows:
   - OPR_CALL
        if an intrinsic call
        remove the MemRefExpr associated with OPR_PARM kids
        if topMemRefHandle for kids is UnnamedRef 
        (after removing the &UnnamedRef from OPR_PARM)
          remove UnnamedRef from kid of OPR_PARM

12/31/09   UseOA-Open64 svn trunk r141 Priyadarshini Malusare 
   - Regenerated TestResults for AliasMapFIAlias because following fix 
     OpenAnalysis revision 275.
     "Fixed the problem where empty sets were showing up for MREs with
	  addressOf and then there was an off by one error in the mappings"

01/11/09   UseOA-Open64 svn trunk r145 Priyadarshini Malusare
   - Regenerated TestCases for ICFGActive after fixing problem
     of multiple location for MemRefExpr with Partial and Full 
	 Accuracy in the same AliasSet.

01/12/07   UseOA-Open64 svn trunk r146 Luis Ramos
   - Added new Linearity TestCases to further test Transitivity

01/19/07   UseOA-Open64 svn trunk r147 Luis Ramos
   - Added more Linearity TestCases and included Linearity in
     regressAll script.

01/19/07   UseOA-Open64 svn trunk r148 Luis Ramos
   - Added Linearity and ExprTree to the regressAll script in Okapi.
   - Regenerated Linearity for Okapi

01/23/07   UseOA-Open64 svn trunk r148 Priyadarshini Malusare
   - Regenerated TestResults for AddressOf Class.
   - Modifications in Open64IRInterface for AddressOf class.
   - Please refer following link for further reference.
     http://www-unix.mcs.anl.gov/OpenAnalysisWiki/moin.cgi/AddressOf_20class 
   - regressAll works with OpenAnalysis r285 on Okapi with gcc-3.2

01/23/07   UseOA-Open64 svn trunk r151 Luis Ramos
   - Corrected a Typo in scripts/regressAll.script.
   - Rechecked and Regenerated LinearityAnalysis TestCases due to AddressOf 
     Change, the output is still correct.
   - Added and Regenerated ExprTree/CosDeg2Rad.B.out, it was MIA. Now 
     regressAll won't give a diff: No such file or Directory error.

2/07/07    UseOA-Open64 svn trunk r155 Priyadarshini Malusare
  - Regenerated TestResults for following changes in OpenAnalysis.
  - Modifications in Open64IRInterface for following changes.
    - deprecated Accuracy field of MemRefExpr.
    - Partial Accuracy is represented by instance of SubSetRef class.
    - Full Accuracy is represented by corresponding MemRefExpr.
    - Please refer following link on the wiki.
      http://www-unix.mcs.anl.gov/OpenAnalysisWiki/moin.cgi/Location_20class
    - regressAll works with OpenAnalysis r298 on Okapi with gcc-3.2

3/01/07    UseOA-Open64 svn trunk r157 Priyadarshini Malusare
    - Added InterActiveFortran Interface for Context-Sensitive and
      Flow-InSensitive Activity Analysis.

3/01/07    UseOA-Open64 svn trunk r160 Priyadarshini Malusare
    - OPR_MLOAD is implemented in Open64IRInterface::findAllMemRefExpr..

3/21/07    UseOA-Open64 svn trunk r163 Priyadarshini Malusare
     - Modified Open64IRInterface::getFormalForActual for,
	   1. Optional Parameters.
	   2. Return elements in the Parameter List (for some types of functions).

4/11/07    UseOA-Open64 svn trunk r166 Priyadarshini Malusare
     - In the new revision of Open64, Module Variables accessed 
       in different
       procedures show same SymHandles, therefore they do not need 
       special Treatment.
     - In the new revision of Open64, GlobalVariables accessed in
       different procedures show different SymHandles and
       therefore, they need special treatment.
     - Open64IRInterface is modified to include logic corrsponding
       to the changes in Open64.

4/15/07    UseOA-Open64 svn trunk r167 Priyadarshini Malusare
    - Regenerated TestCases for AliasMapXAIF after Modification 
      in AliasMapXAIF so that it will generate multiple
      virtual locations for InvisibleLoc::SubSetRef and single 
      Virtual Location for InvisibleLoc::Deref.

4/15/07    UseOA-Open64 svn trunk r168 Priyadarshini Malusare
    - Modify Open64IRInterface because:
    - Changed UnnamedRef(memRefType, StmtHandle) to 
      UnnamedRef(memRefType, StmtHandle).
    - Changed UnnamedLoc(StmtHandle , ....) to 
      UnnamedLoc(ExprHandle , ....)
    - Compiles with OpenAnalysis revision 351.


4/17/07    UseOA-Open64 svn trunk r169 Barbara Kreaseck
    - re-gen'd the genICFG.script to provide better
      Dot Output as now provided by OpenAnalysis.
    - re-gen'd the following regression tests to remove the
      discrepency in StmtHandle output from awhile ago:
        genReachConsts.script
	genICFGReachConsts.script
    - passes regressAll with OpenAnalysis r356 on Okapi with gcc 3.3.4


4/17/07    UseOA-Open64 svn trunk r170 Barbara Kreaseck
    - added the stand-alone extractDOT.cpp application to extract
      the Dot Output lines from the *.out files while removing the
      PRAGMA insertions from Open64 that interfere with GraphViz and
      dot.
    - passes regressAll with OpenAnalysis r356 on Okapi with gcc 3.3.4


4/18/07    UseOA-Open64 svn trunk r171 Priyadarshini Malusare
    - Modifications in Open64IRInterface to treat String
      Assignment as a Expr Statement and not the Intrinsic call.
    - Added OPR_INTRINSIC_CALL implementation for findAllMemRefs...
    - Modified findAssignPairs, build_func_call_list
    - Added new TestCase for SideEffect fixed the SideEffect Results 
      for the String Assignment. 
    - Added new TestCase for the SideEffect.
    - Please refer "http://www-unix.mcs.anl.gov/OpenAnalysisWiki/moin.cgi/INTRINSIC_5fCALL_20String_20Assignments_20treated_20as_20simple_20Assignment_20Statements_20on_20FORTRAN_20side#preview"


4/19/07    UseOA-Open64 svn trunk r172 Priyadarshini Malusare
    - Added missing Opecode OPR_NE for the findAllMemRefExprs...
    - Added new TestCase and TestResults for the UDDUChains.

4/25/07    UseOA-Open64 svn trunk r174 Priyadarshini Malusare
    - Michelle modified the FIAlias algorithm in OA so that it
      does not merge subsetrefs or field refs with their enclosed refs
      to make alias analysis more precise when there are structures
      with pointer fields and when we model virtual method calls.
    - Regenerated TestResults for AliasIRInterface and ICFGActivity.
    - passes regressAll with OpenAnalysis r366 on Okapi with gcc 3.3.4

4/25/07    UseOA-Open64 svn trunk r175 Priyadarshini Malusare
    - Fixed UnnamedRef::expr so that it should not contain addressOf.

05/02/07    UseOA-Open64 svn trunk r176 Priyadarshini Malusare
    - Regenerated TestCases for ReachConsts and ICFGReachConsts to fix
      the Output Statement Sequence Mismatch.

05/30/07    UseOA-Open64 svn trunk r177 Barbara Kreaseck
    - Regenerated ICFGActive test results to accommodate change in output
      from InterActive OpenAnalysis class.
    - passes regressAll with OpenAnalysis r410 on Okapi with gcc 3.3.4

06/26/07    UseOA-Open64 svn trunk r178 Priyadarshini Malusare.
    - Added extra option to *Manager->performAnalysis to specifiy
      DataFlow Analysis Algorithm (Iterative/WorkList(Queue/PQueue)).
    - Compiled with OpenAnalysis revision 427, and Passes all regressAll.

06/26/07    UseOA-Open64 svn trunk r179 Priyadarshini Malusare.
    - Clean-up CSFIActivity::performAnalysis to remove InterAlias 
      in the parameter list of performAnalysis.
    - Compiled with the OpenAnalysis revision 433. Passes regressAll.

07/01/07    UseOA-Open64 svn trunk r180 Priyadarshini Malusare.
    - regenerated TestCases (FIAliasAliasMap/AliasIRInterface) 
      after adding (local/nonlocal) scope for UnnamedRef.

07/03/07    UseOA-Open64 svn trunk r181 Priyadarshini Malusare.
   - Two InvisibleLocations mayOverlap if:
     a. Number of Derefs are same.
     b. Same SymHandle for innermost MRE.
   - Regenerated testcases for ICFGActivity and sideEffect analysis.
   - Compiled with OpenAnalysis revision 435. Passes All RegressAll.

07/18/07    UseOA-Open64 svn trunk r183 Barbara Kreaseck
   - updated extractDOT.cpp to handle LOC and LABEL and I8SRCTRIPLET
   - added reduceDOT.csh that trims out the type info on variables, etc
     to make the DOT graph more tractable.
   - Usage:
       $extractDOT benchmark.B.out > benchmark.dot
       $source reduceDOT.csh benchmark.dot
   - these changes have no impact on OpenAnalysis

07/27/07   UseOA-Open64 svn trunk r184 Barbara Kreaseck
   - re-gen'd AliasMapFIAlias, ICFGActive, SideEffect, ICFGReachConsts
     for new output from OpenAnalysis r448
   - added minimal regression testcases.

07/27/07   UseOA-Open64 svn trunk 185 Barbara Kreaseck
   - re-gen'd AliasMapFIAlias, SideEffect, ICFGReachConsts for new
     output from OpenAnalysis r450

08/10/07   UseOA-Open64 svn trunk 194 Priyadarshini Malusare
   - Added OPR_IF and OPR_LAND case for findAllMemRefExprs...
   - Added New TestCase for boolean UD-DUChain.
   - RegressAll works for OpenAnalysis revision 461.
  
08/10/07   UseOA-Open64 svn trunk 194 Priyadarshini Malusare
   - Deprecated ActivityStmtType and ReachConstsStmtType from
     test-open64.cpp
   - RegressAll works with OpenAnalysis revision463.

08/10/07   UseOA-Open64 svn trunk 198 Priyadarshini Malusare
   - create --oa-PtrAssign flag in test-open64 to test assignment pairs
   - Added TestCases and TestResults /AssignPairs/integer_assignment.*
   - Forgot to regnerate TestCases after adding OPR_GT in
     Open64IRInterface::findAllMemRefExpr...

08/10/07   UseOA-Open64 svn trunk 199 Priyadarshini Malusare
  - Regerated TestResults for SideEffect Analysis after modifying
    mCallToSideEffectMap.
  - passes regressAll with OpenAnalysis r468 on Okapi with gcc 3.3.4

08/10/07   UseOA-Open64 svn trunk 201 Priyadarshini Malusare
  - Added missing OPR_MIN and OPR_MAX in findAllMemRefExprs...
  - Regenerated TestCases and TestResults for AliasIRInterface,
    MemRefExprs and UDDUChains.
 
08/30/07   UseOA-Open64 svn trunk 203 Priyadarshini Malusare
  - Regenerated output of ExprTree after adding ExprHandle 
    iterator in Open64IRInterface.

09/5/07   UseOA-Open64 svn trunk 205 Priyadarshini Malusare
  - Fixed the test-open64.cpp
     -XAIF::ManagerStandard is replaced by XAIF::ManagerUDDUChainsXAIF.
     -Removed Unnecessary Parameter proc from
      ManagerUDDUChainsXAIF::performAnalysis.

09/11/07  UseOA-Open64 svn trunk 205 Priyadarshini Malusare
  - Added new TestCases and TestResults for CSFIActivity.

09/11/07  UseOA-Open64 svn trunk 207 Priyadarshini Malusare  
  - Shows ExprTree in the output of AssignPairs

10/02/07  UseOA-Open64 svn trunk 208 Priyadarshini Malusare
  - Logic for Mapping MemRefExpr patterns to Whirl node is modified.
  - MemRefExprs for Pointers and structures and allocate are added.
  - Please visit wiki page for detail references:
    - http://www-unix.mcs.anl.gov/OpenAnalysisWiki/moin.cgi/Patterns 
  - Added new TestCases and TestResults for AliasIRInterface
  - New MemRefExpr aslo affected AliasMapFIAlias and Activity analysis
    such that only outermost MemRefExpr can be DEF, none of the innermost
    nested MemRefExpr can be DEF.
  - Trivial modification in the ouptutbuilder::graph to outputBuilder::Graph.
    regenerated CallGraph, ICFG, CFG TestCases, not affected original output.
  - Refactored the ExprTree logic of Open64IRInterface
  - Added ExprTree in the Output of AssignPairs.
  - Regerated TestCases for AssignPairs.
 
10/02/07  UseOA-Open64 svn trunk 209 Priyadarshini Malusare
  - Added output MREs for each MemRefHandle in AssignPairs.

10/05/07  UseOA-Open64 svn trunk 210 Priyadarshini Malusare
 - Modified Output of ExprTree, so that OpNode can print multiple
   children (i.e. more than 2)

10/05/07  UseOA-Open64 svn trunk 213 Priyadarshini Malusare
 - Regenerated AliasIRInterface output after adding PointerAssign Pairs.

10/08/07  UseOA-Open64 svn trunk 216 Priyadarshini Malusare
 - Added MemRefExpr for the multiple arrays or pointers allocation.
 - Added Pointer AssignPairs for allocate statements. 
 - Regenerated AliasIRInterface outputs for allocate statements.

10/08/07  UseOA-Open64 svn trunk 217 Priyadarshini Malusare
 - Removed CALLSITEs for ALLOCATE statement.
 - Regenerated TestCases for AliasIRInterface.

10/14/07  UseOA-Open64 svn trunk 219 Priyadarshini Malusare
  - Added MemRefExprfor OPR SWITCH, OPR_CASEGOTO, OPR_GOTO, OPR_LABEL
  - Added TestCase Select_1 (contains switch) into AliasIRInterface.
  - Added ExprHandle for Index Expressions of OPR_ARRAY node
  - regenerated ExprTree and AssignPair output for the Index Expressions.
 
10/15/07  UseOA-Open64 svn trunk 220 Priyadarshini Malusare
  - Added Driver, TestCases, TestResults and testscripts for 
    getUseMREs, getDefMREs and getDiffUseMREs.

10/16/07  UseOA-Open64 svn trunk 222 Priyadarshini Malusare
  - Created branch for ICFGActivity profile information.
  - Modified Makefile
  - Added MITgcm benchmark for ICFGActivity,
    i.e. ad_input_code_sf.w2f.canon_Jean
  - created new directory profile that can store profile output
    of various benchmark for ICFGActivity analysis

10/16/07  UseOA-Open64 svn trunk 223 Priyadarshini Malusare
  - Added sac07 benchmarks
  - Added profile output and TestResults and gmon output for 
    sac07 benchmarks: c2, guppy, msa, bessel

10/23/07  UseOA-Open64 svn trunk 231 Priyadarshini Malusare
  - Added TestCase for index Expression in the ExprTree.

10/25/07  UseOA-Open64 svn trunk 233 Priyadarshini Malusare
  - Added TestCases for ExprTree and AssignPairs after adding
    ExprHandles for the index Expressions of ALLOCATE call.

01/28/08  UseOA-Open64 svn trunk 249 Priyadarshini Malusare
  - AliasTagBranch got compiled with the new FIAliasAliasMap
    using AliasTags.
  - Compiled with the OpenAnalysis revision 636.

04/23/08  UseOA-Open64 svn trunk 307 Priyadarshini Malusare
  - Fixed AliasTagFIAlias regression tests after StriclyLocal
    Modifications to ManagerAliasTagFIAlias.
  - Compiled with OpenAnalysis revision 779.

04/23/08  UseOA-Open64 svn trunk 308 Priyadarshini Malusare
  - Added Reaching Definition Test suit
  - Trying to Tests Pointer assignment as Reaching definition
    to the program point where pointer is derefernced.


07/17/08  UseOA-Open64 svn AliasTagBranch 341 Barbara Kreaseck
  - reGen'd ICFGReachConsts
  - added regressICFGReachConsts to regressAll
  - Complied with OpenAnalysis branch AliasTagBranch r845

09/17/08  UseOA-Open64 svn AliasTagBranch 349 Barbara Kreaseck
  - removed TestCases/*/*.B files from repository
  - changed scripts/genScript.py to generate *.B files during gen and regress
  - regress diffs now ignores lines with "LOC 0 0 source files:" that specifies 
    the location of the source file that generated the *.B file.
  - re-generated all scripts/gen*.script and scripts/regress*.script accordingly
  - needed for differences between targ_ia32 and targ_ia64 *.B files
  - Compiled with OpenAnalysis branch AliasTagBranch r880

02/11/09  UseOA-Open64 svn AliasTagBranch 350 Barbara Kreaseck
  - added --oa-AliasTagCSFIAlias routine to test-open64
  - added regression test and associated structures
  - TestCases/AliasTagCSFIAlias/*
  - TestResults/AliasTagCSFIAlias/*
  - Compiled with OpenAnalysis branch AliasTagBranch r890

02/26/09  UseOA-Open64 svn trunk r355 Barbara Kreaseck
  - after merge with AliasTagBranch
  - temporarily  commented out three regression tests (due to OpenAnalysis):
  test-open64.cpp:66     four header files
  test-open64.cpp:1351   AliasMapXAIF
  test-open64.cpp:1393   UDDUChainsXAIF
  test-open64.cpp:1505   CSFIActivity 
  - commented out bottom half of UDDUChain function (due to OA_ptr() problem):
  test-open64.cpp:1309
  - and associated regression tests from scripts/regressAll.script

  - compiles/regresses with Whirl2OA/trunk r904 and OpenAnalysis/trunk r903

06/12/09  UseOA-Open64 svn trunk r361 Barbara Kreaseck
  - added beginnings of --oa-CSFIActivity functionality 
  - compiles/regresses with Whirl2OA/trunk r912 and OpenAnalysis/trunk r913

07/02/09  UseOA-Open64 svn trunk r362 Barbara Kreaseck
  - minor update to extractDot.cpp
  - compiles/regresses with Whirl2OA/trunk r912 and OpenAnalysis/trunk r915

07/09/09  UseOA-Open64 svn trunk r363 Barbara Kreaseck
  - added --oa-ICFGCSReachConsts ability into test-open64
  - added appropriate TestCases/CSReachConsts and TestResults/CSReachConsts
  - added ICFGCSReachConsts regression test to scripts/regressAll.script
  - compiles/regresses with Whirl2OA/trunk r916 and OpenAnalysis/trunk r916

08/06/09  UseOA-Open64 svn trunk r364 Barbara Kreaseck
  - added --oa-CallContexts ability into test-open64
  - added appropriate TestResults/CallContexts
  - added CallContexts regression test to scripts/regressAll.script
  - compiles/regresses with Whirl2OA/trunk r921 and OpenAnalysis/trunk r920

08/24/09  UseOA-Open64 svn trunk r365 Barbara Kreaseck
  - added code to enable correct calls to ManagerICFGCSReachConsts
  - compiles/regresses with Whirl2OA/trunk r926 and OpenAnalysis/trunk r925

09/29/09  UseOA-Open64 svn trunk r366 Barbara Kreaseck
  - added --oa-ICFGCSActive and associated TestResults and script files
  - currently, only ICFGCSUseful output is being generated.
  - compiles/regresses with Whirl2OA/trunk r926 and OpenAnalysis/trunk r937

10/06/09  UseOA-Open64 svn trunk r367 Barbara Kreaseck
  - updated scripts/genScripts to allow options to be set within the 
    test lines individually, and mark the option value in the .B.out filename.
  - added --ccmax as an option to the --oa-CallContexts and the CS-routines
  - added a couple of tests that include the --ccmax option
  - compiles/regresses with Whirl2OA/trunk r926 and OpenAnalysis/trunk r937

10/12/09  UseOA-Open64 svn trunk r368 Barbara Kreaseck
  - updated test-open64.cpp, ICFGCSActive scripts, TestCases/Activity and
    TestResults/ICFGCSActive to include ICFGCSVaryActive interim results
  - compiles/regresses with Whirl2OA/trunk r933 and OpenAnalysis/trunk r938

10/15/09  UseOA-Open64 svn trunk r369 Barbara Kreaseck
  - reGen'd AliasTagFIAlias results to include new output in OA r940
  - verified new CSFIAliasTag in OA r941 impact on CSReachConsts output,
    added one new testcase, and reGen'd where needed.
  - compiles/regresses with Whirl2OA/trunk r940 and OpenAnalysis/trunk r941

10/22/09  UseOA-Open64 svn trunk r370 Barbara Kreaseck
  - reGen'd ICFGCSReachConsts results to include new output in OA r946
  - reGen'd ICFGCSActive results, still checking (not in regressAll)
  - verified new CSFIAliasTag in OA r946 on most of above
  - compiles/regresses with Whirl2OA/trunk r947 and OpenAnalysis/trunk r946

10/22/09  UseOA-Open64 svn trunk r371 Barbara Kreaseck
  - verified ICFGCSActive results, added regression to regressAll
  - compiles/regresses with Whirl2OA/trunk r947 and OpenAnalysis/trunk r948

10/22/09  UseOA-Open64 svn trunk r372 Barbara Kreaseck
  - re-worked ICFGCSActive output. Re-Gen'd ICFGCSActive results.
  - compiles/regresses with Whirl2OA/trunk r947 and OpenAnalysis/trunk r948

10/22/09  UseOA-Open64 svn trunk r373 Barbara Kreaseck
  - re-worked ICFGCSActive output. Re-Gen'd ICFGCSActive results.
  - compiles/regresses with Whirl2OA/trunk r947 and OpenAnalysis/trunk r949

