
PROCEDURE = { < ProcHandle("arraypointer_::arraypointer_"), SymHandle("arraypointer_::arraypointer_") > }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/MemRefExpr/UseOA-Open64/TestCases/MemRefExpr/allocate_localpointertoarrayAsactualsubscript.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("_ALLOCATE(&P:0:anon_ptr.(3), &0)") =>
        [
            MemRefHandle("_ALLOCATE(&P:0:anon_ptr.(3), &0)") => 
                AddressOf( USE, UnnamedRef( USE, ExprHandle("_ALLOCATE(&P:0:anon_ptr.(3), &0)"), 1, ProcHandle("arraypointer_::arraypointer_")))
            MemRefHandle("&P:0:anon_ptr.(3)") => 
                NamedRef( DEF, SymHandle("arraypointer_::P"))
        ] }
    CALLSITES = { StmtHandle("_ALLOCATE(&P:0:anon_ptr.(3), &0)") =>
        [
            CallHandle("_ALLOCATE(&P:0:anon_ptr.(3), &0)") => 
                NamedRef( USE, SymHandle("arraypointer_::_ALLOCATE"))
        ] }
    MEMREFEXPRS = { StmtHandle("_END()") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("arraypointer_::arraypointer_"), not local > }
    LOCATION = { < SymHandle("arraypointer_::_ALLOCATE"), not local > }
    LOCATION = { < SymHandle("arraypointer_::P"), local > }
