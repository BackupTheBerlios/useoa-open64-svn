
PROCEDURE = { < ProcHandle("foo_"), SymHandle("foo_") > }
    FORMALS = {
        [
            < 0, SymHandle("X") >
            < 1, SymHandle("Y") >
        ] }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/100506/UseOA-Open64/TestCases/MemRefExpr/formal_scalar_actual_inout.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:.predef_F8 = X:0:.predef_F8*    2.000000000000000") =>
        [
            MemRefHandle("Y:0:.predef_F8") => 
                Deref( DEF, NamedRef( USE, SymHandle("Y"), F, full), 1, F, full)
            MemRefHandle("X:0:.predef_F8") => 
                Deref( USE, NamedRef( USE, SymHandle("X"), F, full), 1, F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("foo_"), not local > }
    LOCATION = { < SymHandle("X"), local > }
    LOCATION = { < SymHandle("Y"), local > }

PROCEDURE = { < ProcHandle("head_"), SymHandle("head_") > }
    FORMALS = {
        [
            < 0, SymHandle("X") >
            < 1, SymHandle("Y") >
        ] }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("foo_(&X:0:.predef_F8, &Y:0:.predef_F8)") =>
        [
            MemRefHandle("&X:0:.predef_F8") => 
                NamedRef( USE, SymHandle("X"), F, full)
            MemRefHandle("&Y:0:.predef_F8") => 
                NamedRef( USE, SymHandle("Y"), F, full)
        ] }
    CALLSITES = { StmtHandle("foo_(&X:0:.predef_F8, &Y:0:.predef_F8)") =>
        [
            CallHandle("foo_(&X:0:.predef_F8, &Y:0:.predef_F8)") => 
                NamedRef( USE, SymHandle("foo_"), F, full)
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("foo_(&X:0:.predef_F8, &Y:0:.predef_F8)") =>
        [
            < 0, NamedRef( USE, SymHandle("X"), F, full) >
            < 1, NamedRef( USE, SymHandle("Y"), F, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("foo_"), not local > }
    LOCATION = { < SymHandle("head_"), not local > }
    LOCATION = { < SymHandle("X"), local > }
    LOCATION = { < SymHandle("Y"), local > }
