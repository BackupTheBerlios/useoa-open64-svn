
PROCEDURE = { < ProcHandle("foo_::foo_"), SymHandle("foo_::foo_") > }
    FORMALS = {
        [
            < 0, SymHandle("foo_::X") >
            < 1, SymHandle("foo_::Y") >
        ] }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/svn/UseOA-Open64/trunk/TestCases/Alias/local_array_subscript_actual.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:.predef_F8 = X:0:.predef_F8*    2.000000000000000") =>
        [
            MemRefHandle("Y:0:.predef_F8") => 
                Deref( DEF, NamedRef( DEF, SymHandle("foo_::Y")), 1)
            MemRefHandle("X:0:.predef_F8") => 
                Deref( USE, NamedRef( USE, SymHandle("foo_::X")), 1)
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("foo_::foo_"), not local > }
    LOCATION = { < SymHandle("foo_::X"), local > }
    LOCATION = { < SymHandle("foo_::Y"), local > }

PROCEDURE = { < ProcHandle("foo_::head_"), SymHandle("foo_::head_") > }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("K:0:.predef_I4 = 1") =>
        [
            MemRefHandle("K:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("head_::K"))
        ] }
    MEMREFEXPRS = { StmtHandle("P:0:anon_ptr.(1) =     1.000000") =>
        [
            MemRefHandle("P:0:anon_ptr.(1)") => 
                SubSetRef( DEF, NamedRef( DEF, SymHandle("head_::P")))
        ] }
    MEMREFEXPRS = { StmtHandle("Q:0:anon_ptr.(1) =     2.000000") =>
        [
            MemRefHandle("Q:0:anon_ptr.(1)") => 
                SubSetRef( DEF, NamedRef( DEF, SymHandle("head_::Q")))
        ] }
    MEMREFEXPRS = { StmtHandle("foo_(&P:0:anon_ptr.(K:0:.predef_I4), &Q:0:anon_ptr.(K:0:.predef_I4))") =>
        [
            MemRefHandle("&P:0:anon_ptr.(K:0:.predef_I4)") => 
                AddressOf( USE, SubSetRef( USE, NamedRef( USE, SymHandle("head_::P"))))
            MemRefHandle("K:0:.predef_I4") => 
                NamedRef( USE, SymHandle("head_::K"))
            MemRefHandle("&Q:0:anon_ptr.(K:0:.predef_I4)") => 
                AddressOf( USE, SubSetRef( USE, NamedRef( USE, SymHandle("head_::Q"))))
            MemRefHandle("K:0:.predef_I4") => 
                NamedRef( USE, SymHandle("head_::K"))
        ] }
    CALLSITES = { StmtHandle("foo_(&P:0:anon_ptr.(K:0:.predef_I4), &Q:0:anon_ptr.(K:0:.predef_I4))") =>
        [
            CallHandle("foo_(&P:0:anon_ptr.(K:0:.predef_I4), &Q:0:anon_ptr.(K:0:.predef_I4))") => 
                NamedRef( USE, SymHandle("foo_::foo_"))
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("foo_(&P:0:anon_ptr.(K:0:.predef_I4), &Q:0:anon_ptr.(K:0:.predef_I4))") =>
        [
            < 0, AddressOf( USE, SubSetRef( USE, NamedRef( USE, SymHandle("head_::P")))) >
            < 1, AddressOf( USE, SubSetRef( USE, NamedRef( USE, SymHandle("head_::Q")))) >
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("foo_::foo_"), not local > }
    LOCATION = { < SymHandle("foo_::head_"), not local > }
    LOCATION = { < SymHandle("head_::K"), local > }
    LOCATION = { < SymHandle("head_::P"), local > }
    LOCATION = { < SymHandle("head_::Q"), local > }
