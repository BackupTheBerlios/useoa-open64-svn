========================================================

stmt :  LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/svn/UseOA-Open64/trunk/TestCases/ExprTree/CosDeg2Rad.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : head_(&0:X:0:anon_ptr., &0:Y:0:anon_ptr.)

==> AssignPairs : 




==> Expression Tree(s) : 

1. ExprHandle: &0:X:0:anon_ptr.

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &0:X:0:anon_ptr. )


2. ExprHandle: &0:Y:0:anon_ptr.

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &0:Y:0:anon_ptr. )


==> MemRefHandle:&0:X:0:anon_ptr.
	mre: 

AddressOf(
    mMemRefType: USE
    mMRE: 
    NamedRef(
        mMemRefType: USE
        mSymHandle: SymHandle(main_::X)
    )
)

==> MemRefHandle:&0:Y:0:anon_ptr.
	mre: 

AddressOf(
    mMemRefType: USE
    mMRE: 
    NamedRef(
        mMemRefType: USE
        mSymHandle: SymHandle(main_::Y)
    )
)

========================================================

stmt : _END()

==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : return

==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : return

==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : PRAGMA 0 190 <2,1,X> 0 (0x0) # OPENAD_INDEPENDENT


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : PRAGMA 0 189 <2,2,Y> 0 (0x0) # OPENAD_DEPENDENT


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : PRAGMA 0 188 <1,25,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


==> AssignPairs : 




==> Expression Tree(s) : 

========================================================

stmt : Y:0:anon_ptr.(1) = COS(&0:X:0:anon_ptr.(1)*  0.01745329251994330)

==> AssignPairs : 

1. mref = Y:0:anon_ptr.(1), 	expr = COS(&0:X:0:anon_ptr.(1)*  0.01745329251994330)



==> Expression Tree(s) : 

1. ExprHandle: COS(&0:X:0:anon_ptr.(1)*  0.01745329251994330)

graph EXPRESSION TREE:

    Node 0: ET OpNode ( COS(&0:X:0:anon_ptr.(1)*  0.01745329251994330) )
    Edge: 
        0 => 
        Node 1: ET OpNode ( * )
        Edge: 
            1 => 
            Node 2: ET MemRefNode ( 0:X:0:anon_ptr.(1) )
        Edge: 
            1 => 
            Node 3: ET ConstValNode (   0.01745329251994330 )


==> MemRefHandle:Y:0:anon_ptr.(1)
	mre: 

SubSetRef(
    mMemRefType: DEF
    mMRE: 
    Deref(
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(head_::Y)
        )
        mNumDeref: 1
    )
)

==> MemRefHandle:0:X:0:anon_ptr.(1)
	mre: 

SubSetRef(
    mMemRefType: USE
    mMRE: 
    Deref(
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mMemRefType: USE
            mSymHandle: SymHandle(head_::X)
        )
        mNumDeref: 1
    )
)

========================================================

stmt : return

==> AssignPairs : 




==> Expression Tree(s) : 

