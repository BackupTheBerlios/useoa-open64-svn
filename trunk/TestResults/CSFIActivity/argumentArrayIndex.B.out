
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(foo_)
        mNumSets: 5
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                4	 => [ MemRefHandle(Y:0:.predef_F8)    MemRefHandle(
ProcNamefoo_
X:0:.predef_F8) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                4	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(head_)
        mNumSets: 6
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(K)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                3	 => [ MemRefHandle(
ProcNamehead_

ProcNamehead_
&Y:0:.predef_F8) ] 
                4	 => [ MemRefHandle(K:0:.predef_I4)    MemRefHandle(
ProcNamehead_
K:0:.predef_I4)    MemRefHandle(
ProcNamehead_
K:0:.predef_I4)    MemRefHandle(
ProcNamehead_
K:0:.predef_I4) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(K)
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    ) ] 

    )
)
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 22
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 22
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

graph ICFG:

    subgraph foo__0:

        Node 6: 
            ==  ICFG ENTRY_NODE 6 ==


        Node 7: 
            
ProcNamefoo_
 LOC 0 0 source files:	1	"/home/malusare/ContextSensitiveActivity/UseOA-Open64/TestCases/CSFIActivity/argumentArrayIndex.f"
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamefoo_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
==  ICFG CFLOW_NODE 7 ==


Y:0:.predef_F8 = X:0:.predef_F8*    2.000000000000000
return


        Node 8: 
            ==  ICFG EXIT_NODE 8 ==


        Edge: 6 => 7
            

        Edge: 7 => 8
            


    subgraph head__1:

        Node 12: 
            ==  ICFG ENTRY_NODE 12 == (entry)


        Node 17: 
            
ProcNamehead_
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamehead_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamehead_

ProcNamehead_
==  ICFG CFLOW_NODE 17 ==


K:0:.predef_I4 = 1


        Node 18: 
            
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CALL_NODE 18 ==
foo_(&X:0:anon_ptr.(K:0:.predef_I4), &X:0:anon_ptr.(K:0:.predef_I4+1))


        Node 20: 
            ==  ICFG RETURN_NODE 20 ==


        Node 21: 
            
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CALL_NODE 21 ==
foo_(&X:0:anon_ptr.(K:0:.predef_I4), &Y:0:.predef_F8)


        Node 23: 
            ==  ICFG RETURN_NODE 23 ==


        Node 24: 
            
ProcNamehead_
==  ICFG CFLOW_NODE 24 ==
return


        Node 25: 
            ==  ICFG EXIT_NODE 25 == (exit)


        Edge: 17 => 18
            

        Edge: 18 => 20
            CALL_RETURN

        Edge: 20 => 21
            

        Edge: 21 => 23
            CALL_RETURN

        Edge: 23 => 24
            

        Edge: 12 => 17
            

        Edge: 24 => 25
            


    Edge: 18 => 6
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
CALL_(foo_(&X:0:anon_ptr.(K:0:.predef_I4), &X:0:anon_ptr.(K:0:.predef_I4+1))),style=dashed,color=red

    Edge: 8 => 20
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
RETURN_(foo_(&X:0:anon_ptr.(K:0:.predef_I4), &X:0:anon_ptr.(K:0:.predef_I4+1))),style=dashed,color=blue

    Edge: 21 => 6
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
CALL_(foo_(&X:0:anon_ptr.(K:0:.predef_I4), &Y:0:.predef_F8)),style=dashed,color=red

    Edge: 8 => 23
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
RETURN_(foo_(&X:0:anon_ptr.(K:0:.predef_I4), &Y:0:.predef_F8)),style=dashed,color=blue

before ManagerDUGStandard performAnalysis
Before DUGStandard performAnalysis
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 22

ProcNamefoo_
The size of set 10
The sixe of set 22
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator

InvisibleLoc(
    mMRE: 
    Deref(
        mAddressOf: 0
        mFullAccuracy: 1
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mAddressOf: 0
            mFullAccuracy: 1
            mMemRefType: USE
            mSymHandle: SymHandle(Y)
        )
        mNumDeref: 1
    )
)

InvisibleLoc(
    mMRE: 
    Deref(
        mAddressOf: 0
        mFullAccuracy: 0
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mAddressOf: 0
            mFullAccuracy: 1
            mMemRefType: USE
            mSymHandle: SymHandle(X)
        )
        mNumDeref: 1
    )
)
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 22
outside getMayLocs Iterator
Inserting Dep Symbol
Y
********************
Inserting Dep Symbol
X
********************
After Location Iterator
Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Edge: 26 => 27
        20


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Node 29: 
        29

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25

    Edge: 29 => 28
        26


graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Node 29: 
        29

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25

    Edge: 29 => 28
        26

    Edge: 28 => 29
        27

Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Node 29: 
        29

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25

    Edge: 29 => 28
        26

    Edge: 28 => 29
        27

    Edge: 27 => 28
        28

after ManagerDUGStandard performAnalysis

graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Node 29: 
        29

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25

    Edge: 29 => 28
        26

    Edge: 28 => 29
        27

    Edge: 27 => 28
        28

    Edge: 27 => 28
        29

Printing DUG

graph DGraph:

    Node 26: 
        26

    Node 27: 
        27

    Node 28: 
        28

    Node 29: 
        29

    Edge: 26 => 27
        20

    Edge: 27 => 26
        21

    Edge: 26 => 28
        22

    Edge: 28 => 26
        23

    Edge: 26 => 27
        24

    Edge: 27 => 26
        25

    Edge: 29 => 28
        26

    Edge: 28 => 29
        27

    Edge: 27 => 28
        28

    Edge: 27 => 28
        29

Done Printing DUG
before ManagerDUActive markVaried
before Indep Locations
Inside Indep Locations
ManagerDUActive::markVaried::nodeId29
-v->NamedLoc(this=0x835bbd8, mSymHandle.hval()=137631528, mLocal=1):Y
(29)
Inside setVaried
-v->NamedLoc(this=0x835c288, mSymHandle.hval()=137615528, mLocal=1):Y
(28)
Inside setVaried
Inside Indep Locations
ManagerDUActive::markVaried::nodeId26
-v->NamedLoc(this=0x835bfb0, mSymHandle.hval()=137631488, mLocal=1):X
(26)
Inside setVaried
-v->NamedLoc(this=0x835bfd8, mSymHandle.hval()=137615488, mLocal=1):X
(27)
Inside setVaried
-v->NamedLoc(this=0x835c288, mSymHandle.hval()=137615528, mLocal=1):Y
(28)
Inside setVaried
-v->NamedLoc(this=0x835c288, mSymHandle.hval()=137615528, mLocal=1):Y
(28)
Inside setVaried
-v->NamedLoc(this=0x835c288, mSymHandle.hval()=137615528, mLocal=1):Y
(28)
Inside setVaried
-v->NamedLoc(this=0x835bfd8, mSymHandle.hval()=137615488, mLocal=1):X
(27)
Inside setVaried
-v->NamedLoc(this=0x835c288, mSymHandle.hval()=137615528, mLocal=1):Y
(28)
Inside setVaried
-v->NamedLoc(this=0x835bbd8, mSymHandle.hval()=137631528, mLocal=1):Y
(29)
Inside setVaried
Outside Indep Locations
after ManagerDUActive markVaried
Inside ManagerDUActive markUseful
before dep Iter
Inside dep Iter
before if
Inside if
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
after if
Inside dep Iter
before if
Inside if
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
after if
Outside dep Iter
before Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
after danger duaa
before activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
before printing active syms iterators retval

InterActive(
    Procedure( foo_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    Procedure( head_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    ActiveSymSet: [ 
        SymHandle(X)
            SymHandle(Y)
            SymHandle(X)
            SymHandle(Y) ] 
    mNumIterUseful: 0
    mNumIterVary: 0
)
