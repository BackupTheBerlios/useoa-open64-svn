
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(globals_)
        mNumSets: 1
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet

    )
    AliasMap(
        mProcHandle: ProcHandle(foo_)
        mNumSets: 6
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: DEF
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 1
                5	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                4	 => [ MemRefHandle(
ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
0:X:0:anon_ptr.(1))    MemRefHandle(
ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
0:X:0:anon_ptr.(2)) ] 
                5	 => [ MemRefHandle(Y:0:.predef_F8) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                4	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: DEF
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(head_)
        mNumSets: 7
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(AGLOBAL)
                        mLocal: 0
                        mFullOverlap: [ SymHandle(AGLOBAL) ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                6	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                1	 => [ MemRefHandle(
ProcNamehead_
AGLOBAL:0:.predef_F8) ] 
                3	 => [ MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
&0:X:0:anon_ptr.) ] 
                6	 => [ MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
Y:0:anon_ptr.(1)) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(AGLOBAL)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    ) ] 
                6	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    ) ] 

    )
)
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

graph ICFG:

    subgraph globals__0:

        Node 7: 
            ==  ICFG ENTRY_NODE 7 == (entry)


        Node 8: 
            
ProcNameglobals_
 LOC 0 0 source files:	1	"/home/malusare/ContextSensitiveActivity/UseOA-Open64/TestCases/CSFIActivity/globalActive_3.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 8 ==



        Node 9: 
            ==  ICFG EXIT_NODE 9 == (exit)


        Edge: 7 => 8
            

        Edge: 8 => 9
            


    subgraph foo__1:

        Node 13: 
            ==  ICFG ENTRY_NODE 13 ==


        Node 14: 
            
ProcNamefoo_
PRAGMA 0 188 <1,23,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamefoo_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
==  ICFG CFLOW_NODE 14 ==


Y:0:.predef_F8 = 0:X:0:anon_ptr.(1)*0:X:0:anon_ptr.(2)
return


        Node 15: 
            ==  ICFG EXIT_NODE 15 ==


        Edge: 13 => 14
            

        Edge: 14 => 15
            


    subgraph head__2:

        Node 19: 
            ==  ICFG ENTRY_NODE 19 == (entry)


        Node 23: 
            
ProcNamehead_
PRAGMA 0 188 <1,23,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamehead_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamehead_
USE <1,20,globals_>
==  ICFG CFLOW_NODE 23 ==





        Node 24: 
            
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CALL_NODE 24 ==
foo_(&0:X:0:anon_ptr., &AGLOBAL:0:.predef_F8)


        Node 26: 
            ==  ICFG RETURN_NODE 26 ==


        Node 27: 
            
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CFLOW_NODE 27 ==
Y:0:anon_ptr.(1) = AGLOBAL:0:.predef_F8
return


        Node 28: 
            ==  ICFG EXIT_NODE 28 == (exit)


        Edge: 23 => 24
            

        Edge: 24 => 26
            CALL_RETURN

        Edge: 26 => 27
            

        Edge: 19 => 23
            

        Edge: 27 => 28
            


    Edge: 24 => 13
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
CALL_(foo_(&0:X:0:anon_ptr., &AGLOBAL:0:.predef_F8)),style=dashed,color=red

    Edge: 15 => 26
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
RETURN_(foo_(&0:X:0:anon_ptr., &AGLOBAL:0:.predef_F8)),style=dashed,color=blue

before ManagerDUGStandard performAnalysis
Before DUGStandard performAnalysis
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
The size of set 10
The sixe of set 22
The size of set 10
The sixe of set 22

ProcNamehead_
The size of set 10
The sixe of set 21
after alias locations
after alias locations
before getMayLocs iterator
outside getMayLocs Iterator
before getMayLocs iterator
outside getMayLocs Iterator
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
Inserting Dep Symbol
Y
********************
After Location Iterator
Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Edge: 29 => 30
        19


graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20


graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21


graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21

    Edge: 32 => 31
        22


graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Node 33: 
        33

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21

    Edge: 32 => 31
        22

    Edge: 31 => 33
        23

Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Node 33: 
        33

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21

    Edge: 32 => 31
        22

    Edge: 31 => 33
        23

    Edge: 30 => 32
        24

Before assignActiveStandard
After assignActiveStandard
after ManagerDUGStandard performAnalysis

graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Node 33: 
        33

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21

    Edge: 32 => 31
        22

    Edge: 31 => 33
        23

    Edge: 30 => 32
        24

    Edge: 30 => 32
        25

Printing DUG

graph DGraph:

    Node 29: 
        29

    Node 30: 
        30

    Node 31: 
        31

    Node 32: 
        32

    Node 33: 
        33

    Edge: 29 => 30
        19

    Edge: 30 => 29
        20

    Edge: 31 => 32
        21

    Edge: 32 => 31
        22

    Edge: 31 => 33
        23

    Edge: 30 => 32
        24

    Edge: 30 => 32
        25

Done Printing DUG
before ManagerDUActive markVaried
before Indep Locations
Outside Indep Locations
after ManagerDUActive markVaried
Inside ManagerDUActive markUseful
before dep Iter
Inside dep Iter
before if
Inside if
after if
Outside dep Iter
before Danger duaa
after danger duaa
before activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
before printing active syms iterators retval

InterActive(
    Procedure( globals_ ): 
    ActiveLocSet([  ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    Procedure( foo_ ): 
    ActiveLocSet([  ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    Procedure( head_ ): 
    ActiveLocSet([  ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    ActiveSymSet: [  ] 
    mNumIterUseful: 0
    mNumIterVary: 0
)
