
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(head_)
        mNumSets: 11
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(T1)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(T2)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y1)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y2)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y3)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                8	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y4)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                10	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 2
                9	 => 1
                10	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                3	 => [ MemRefHandle(T1:0:.predef_F8)    MemRefHandle(
ProcNamehead_

ProcNamehead_
&T1:0:.predef_F8)    MemRefHandle(
ProcNamehead_
T1:0:.predef_F8) ] 
                4	 => [ MemRefHandle(T2:0:.predef_F8)    MemRefHandle(
ProcNamehead_

ProcNamehead_
&T2:0:.predef_F8)    MemRefHandle(
ProcNamehead_
T2:0:.predef_F8)    MemRefHandle(
ProcNamehead_

ProcNamehead_
&T2:0:.predef_F8)    MemRefHandle(
ProcNamehead_
T2:0:.predef_F8) ] 
                5	 => [ MemRefHandle(Y1:0:.predef_F8)    MemRefHandle(
ProcNamehead_
Y1:0:.predef_F8) ] 
                6	 => [ MemRefHandle(Y2:0:.predef_F8)    MemRefHandle(
ProcNamehead_
Y2:0:.predef_F8) ] 
                7	 => [ MemRefHandle(Y3:0:.predef_F8)    MemRefHandle(
ProcNamehead_
Y3:0:.predef_F8) ] 
                8	 => [ MemRefHandle(Y4:0:.predef_F8)    MemRefHandle(
ProcNamehead_
Y4:0:.predef_F8) ] 
                9	 => [ MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
0:X:0:anon_ptr.(1))    MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
0:X:0:anon_ptr.(2)) ] 
                10	 => [ MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
Y:0:anon_ptr.(1))    MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
Y:0:anon_ptr.(2))    MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
Y:0:anon_ptr.(3))    MemRefHandle(
ProcNamehead_

ProcNamehead_

ProcNamehead_
Y:0:anon_ptr.(4)) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(T1)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(T2)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(Y1)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(Y2)
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(Y3)
                    ) ] 
                8	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mSymHandle: SymHandle(Y4)
                    ) ] 
                9	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    ) ] 
                10	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    ) ] 

    )
)
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

graph ICFG:

    subgraph head__0:

        Node 5: 
            ==  ICFG ENTRY_NODE 5 == (entry)


        Node 6: 
            
ProcNamehead_
 LOC 0 0 source files:	1	"/home/malusare/ContextSensitiveActivity/UseOA-Open64/TestCases/CSFIActivity/lion.f"
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamehead_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CFLOW_NODE 6 ==


T1:0:.predef_F8 = 0:X:0:anon_ptr.(1)/0:X:0:anon_ptr.(2)
T2:0:.predef_F8 = COS(&T1:0:.predef_F8)
Y1:0:.predef_F8 = EXP(&T2:0:.predef_F8)
Y2:0:.predef_F8 = T2:0:.predef_F8*    3.140000104904175
Y3:0:.predef_F8 = SIN(&T2:0:.predef_F8)
Y4:0:.predef_F8 = T1:0:.predef_F8*T2:0:.predef_F8
Y:0:anon_ptr.(1) = Y1:0:.predef_F8
Y:0:anon_ptr.(2) = Y2:0:.predef_F8
Y:0:anon_ptr.(3) = Y3:0:.predef_F8
Y:0:anon_ptr.(4) = Y4:0:.predef_F8
return


        Node 7: 
            ==  ICFG EXIT_NODE 7 == (exit)


        Edge: 5 => 6
            

        Edge: 6 => 7
            


before ManagerDUGStandard performAnalysis
Before DUGStandard performAnalysis
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamehead_
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamehead_

ProcNamehead_
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamehead_
The size of set 10
The sixe of set 21

ProcNamehead_
The size of set 10
The sixe of set 21

ProcNamehead_
The size of set 10
The sixe of set 21

ProcNamehead_
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator

InvisibleLoc(
    mMRE: 
    Deref(
        mAddressOf: 0
        mFullAccuracy: 0
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mAddressOf: 0
            mFullAccuracy: 1
            mMemRefType: USE
            mSymHandle: SymHandle(X)
        )
        mNumDeref: 1
    )
)
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
Inserting Dep Symbol
Y
********************
After Location Iterator
Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Edge: 8 => 9
        5


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Node 15: 
        15

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11

    Edge: 11 => 15
        12


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Node 15: 
        15

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11

    Edge: 11 => 15
        12

    Edge: 12 => 15
        13


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Node 15: 
        15

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11

    Edge: 11 => 15
        12

    Edge: 12 => 15
        13

    Edge: 13 => 15
        14


graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Node 15: 
        15

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11

    Edge: 11 => 15
        12

    Edge: 12 => 15
        13

    Edge: 13 => 15
        14

    Edge: 14 => 15
        15

after ManagerDUGStandard performAnalysis
Printing DUG

graph DGraph:

    Node 8: 
        8

    Node 9: 
        9

    Node 10: 
        10

    Node 11: 
        11

    Node 12: 
        12

    Node 13: 
        13

    Node 14: 
        14

    Node 15: 
        15

    Edge: 8 => 9
        5

    Edge: 9 => 10
        6

    Edge: 10 => 11
        7

    Edge: 10 => 12
        8

    Edge: 10 => 13
        9

    Edge: 9 => 14
        10

    Edge: 10 => 14
        11

    Edge: 11 => 15
        12

    Edge: 12 => 15
        13

    Edge: 13 => 15
        14

    Edge: 14 => 15
        15

Done Printing DUG
before ManagerDUActive markVaried
before Indep Locations
Inside Indep Locations
ManagerDUActive::markVaried::nodeId8
-v->NamedLoc(this=0x8354118, mSymHandle.hval()=137614312, mLocal=1):X
(8)
Inside setVaried
-v->NamedLoc(this=0x8354140, mSymHandle.hval()=137614392, mLocal=1):T1
(9)
Inside setVaried
-v->NamedLoc(this=0x83543e0, mSymHandle.hval()=137614432, mLocal=1):T2
(10)
Inside setVaried
-v->NamedLoc(this=0x8354590, mSymHandle.hval()=137614472, mLocal=1):Y1
(11)
Inside setVaried
-v->NamedLoc(this=0x8355cd0, mSymHandle.hval()=137614352, mLocal=1):Y
(15)
Inside setVaried
-v->NamedLoc(this=0x83557f0, mSymHandle.hval()=137614512, mLocal=1):Y2
(12)
Inside setVaried
-v->NamedLoc(this=0x8355cd0, mSymHandle.hval()=137614352, mLocal=1):Y
(15)
Inside setVaried
-v->NamedLoc(this=0x8355990, mSymHandle.hval()=137614552, mLocal=1):Y3
(13)
Inside setVaried
-v->NamedLoc(this=0x8355cd0, mSymHandle.hval()=137614352, mLocal=1):Y
(15)
Inside setVaried
-v->NamedLoc(this=0x8355b30, mSymHandle.hval()=137614592, mLocal=1):Y4
(14)
Inside setVaried
-v->NamedLoc(this=0x8355cd0, mSymHandle.hval()=137614352, mLocal=1):Y
(15)
Inside setVaried
-v->NamedLoc(this=0x8355b30, mSymHandle.hval()=137614592, mLocal=1):Y4
(14)
Inside setVaried
Outside Indep Locations
after ManagerDUActive markVaried
Inside ManagerDUActive markUseful
before dep Iter
Inside dep Iter
before if
Inside if
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T1)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T2)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y1)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T2)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y2)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T2)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y3)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T1)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(T2)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y4)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
after if
Outside dep Iter
before Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
after danger duaa
before activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
before printing active syms iterators retval

InterActive(
    Procedure( head_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(T1)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(T2)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y1)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y2)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y3)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y4)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    ActiveSymSet: [ 
        SymHandle(X)
            SymHandle(Y)
            SymHandle(T1)
            SymHandle(T2)
            SymHandle(Y1)
            SymHandle(Y2)
            SymHandle(Y3)
            SymHandle(Y4) ] 
    mNumIterUseful: 0
    mNumIterVary: 0
)
