
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(bar_)
        mNumSets: 6
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(bar_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(C)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(D)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(C)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(D)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                4	 => [ MemRefHandle(
ProcNamebar_
C:0:.predef_F8)    MemRefHandle(
ProcNamebar_
C:0:.predef_F8) ] 
                5	 => [ MemRefHandle(D:0:.predef_F8) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(bar_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(C)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(D)
                    ) ] 
                4	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(C)
                        )
                        mNumDeref: 1
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(D)
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(foo_)
        mNumSets: 7
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(bar_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(A)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(B)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(A)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                6	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(B)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                3	 => [ MemRefHandle(
ProcNamefoo_

ProcNamefoo_
&A:0:.predef_F8) ] 
                4	 => [ MemRefHandle(
ProcNamefoo_

ProcNamefoo_
&B:0:.predef_F8) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(bar_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(A)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(B)
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(A)
                        )
                        mNumDeref: 1
                    ) ] 
                6	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(B)
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(head_)
        mNumSets: 6
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo_)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(X)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(X)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mAddressOf: 0
                            mFullAccuracy: 0
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mAddressOf: 0
                                mFullAccuracy: 1
                                mMemRefType: USE
                                mSymHandle: SymHandle(Y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 1
                5	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo_)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(X)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mAddressOf: 0
                        mFullAccuracy: 1
                        mMemRefType: USE
                        mSymHandle: SymHandle(Y)
                    ) ] 
                4	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(X)
                        )
                        mNumDeref: 1
                    ) ] 
                5	 => [ 
                    Deref(
                        mAddressOf: 0
                        mFullAccuracy: 0
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mAddressOf: 0
                            mFullAccuracy: 1
                            mMemRefType: USE
                            mSymHandle: SymHandle(Y)
                        )
                        mNumDeref: 1
                    ) ] 

    )
)
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator

graph ICFG:

    subgraph bar__0:

        Node 7: 
            ==  ICFG ENTRY_NODE 7 ==


        Node 8: 
            
ProcNamebar_
 LOC 0 0 source files:	1	"/home/malusare/ContextSensitiveActivity/UseOA-Open64/TestCases/CSFIActivity/sideEffect_3.f"
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamebar_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

ProcNamebar_

ProcNamebar_

ProcNamebar_

ProcNamebar_

ProcNamebar_
==  ICFG CFLOW_NODE 8 ==


D:0:.predef_F8 = C:0:.predef_F8*C:0:.predef_F8
return


        Node 9: 
            ==  ICFG EXIT_NODE 9 ==


        Edge: 7 => 8
            

        Edge: 8 => 9
            


    subgraph foo__1:

        Node 13: 
            ==  ICFG ENTRY_NODE 13 ==


        Node 17: 
            
ProcNamefoo_
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamefoo_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 17 ==




        Node 18: 
            
ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
==  ICFG CALL_NODE 18 ==
bar_(&A:0:.predef_F8, &B:0:.predef_F8)


        Node 20: 
            ==  ICFG RETURN_NODE 20 ==


        Node 21: 
            
ProcNamefoo_
==  ICFG CFLOW_NODE 21 ==
return


        Node 22: 
            ==  ICFG EXIT_NODE 22 ==


        Edge: 17 => 18
            

        Edge: 18 => 20
            CALL_RETURN

        Edge: 20 => 21
            

        Edge: 13 => 17
            

        Edge: 21 => 22
            


    subgraph head__2:

        Node 26: 
            ==  ICFG ENTRY_NODE 26 == (entry)


        Node 30: 
            
ProcNamehead_
PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX

ProcNamehead_
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 30 ==




        Node 31: 
            
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
==  ICFG CALL_NODE 31 ==
foo_(&X:0:anon_ptr.(1), &Y:0:anon_ptr.(1))


        Node 33: 
            ==  ICFG RETURN_NODE 33 ==


        Node 34: 
            
ProcNamehead_
==  ICFG CFLOW_NODE 34 ==
return


        Node 35: 
            ==  ICFG EXIT_NODE 35 == (exit)


        Edge: 30 => 31
            

        Edge: 31 => 33
            CALL_RETURN

        Edge: 33 => 34
            

        Edge: 26 => 30
            

        Edge: 34 => 35
            


    Edge: 18 => 7
        
ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
CALL_(bar_(&A:0:.predef_F8, &B:0:.predef_F8)),style=dashed,color=red

    Edge: 9 => 20
        
ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_

ProcNamefoo_
RETURN_(bar_(&A:0:.predef_F8, &B:0:.predef_F8)),style=dashed,color=blue

    Edge: 31 => 13
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
CALL_(foo_(&X:0:anon_ptr.(1), &Y:0:anon_ptr.(1))),style=dashed,color=red

    Edge: 22 => 33
        
ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_

ProcNamehead_
RETURN_(foo_(&X:0:anon_ptr.(1), &Y:0:anon_ptr.(1))),style=dashed,color=blue

before ManagerDUGStandard performAnalysis
Before DUGStandard performAnalysis
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21

ProcNamebar_

ProcNamebar_
The size of set 10
The sixe of set 21
The size of set 10
The sixe of set 21
after alias locations
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator

InvisibleLoc(
    mMRE: 
    Deref(
        mAddressOf: 0
        mFullAccuracy: 0
        mMemRefType: USE
        mMRE: 
        NamedRef(
            mAddressOf: 0
            mFullAccuracy: 1
            mMemRefType: USE
            mSymHandle: SymHandle(X)
        )
        mNumDeref: 1
    )
)
after alias locations
before getMayLocs iterator
Inside getMayLocs iterator
The size of set 10
The sixe of set 21
outside getMayLocs Iterator
Inserting Dep Symbol
Y
********************
After Location Iterator
Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Edge: 36 => 37
        25


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31

    Edge: 41 => 39
        32

Before assignActiveStandard
After assignActiveStandard

graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31

    Edge: 41 => 39
        32

    Edge: 40 => 41
        33

after ManagerDUGStandard performAnalysis

graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31

    Edge: 41 => 39
        32

    Edge: 40 => 41
        33

    Edge: 40 => 41
        34


graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31

    Edge: 41 => 39
        32

    Edge: 40 => 41
        33

    Edge: 40 => 41
        34

    Edge: 37 => 39
        35

Printing DUG

graph DGraph:

    Node 36: 
        36

    Node 37: 
        37

    Node 38: 
        38

    Node 39: 
        39

    Node 40: 
        40

    Node 41: 
        41

    Edge: 36 => 37
        25

    Edge: 37 => 36
        26

    Edge: 38 => 39
        27

    Edge: 39 => 38
        28

    Edge: 37 => 40
        29

    Edge: 40 => 37
        30

    Edge: 39 => 41
        31

    Edge: 41 => 39
        32

    Edge: 40 => 41
        33

    Edge: 40 => 41
        34

    Edge: 37 => 39
        35

Done Printing DUG
before ManagerDUActive markVaried
before Indep Locations
Inside Indep Locations
ManagerDUActive::markVaried::nodeId36
-v->NamedLoc(this=0x8361980, mSymHandle.hval()=137647616, mLocal=1):X
(36)
Inside setVaried
-v->NamedLoc(this=0x83619a8, mSymHandle.hval()=137631616, mLocal=1):A
(37)
Inside setVaried
-v->NamedLoc(this=0x8361fe0, mSymHandle.hval()=137615616, mLocal=1):C
(40)
Inside setVaried
-v->NamedLoc(this=0x83637e8, mSymHandle.hval()=137615656, mLocal=1):D
(41)
Inside setVaried
-v->NamedLoc(this=0x8361c78, mSymHandle.hval()=137631656, mLocal=1):B
(39)
Inside setVaried
-v->NamedLoc(this=0x8361c40, mSymHandle.hval()=137647656, mLocal=1):Y
(38)
Inside setVaried
-v->NamedLoc(this=0x83637e8, mSymHandle.hval()=137615656, mLocal=1):D
(41)
Inside setVaried
-v->NamedLoc(this=0x8361c78, mSymHandle.hval()=137631656, mLocal=1):B
(39)
Inside setVaried
-v->NamedLoc(this=0x83637e8, mSymHandle.hval()=137615656, mLocal=1):D
(41)
Inside setVaried
Outside Indep Locations
after ManagerDUActive markVaried
Inside ManagerDUActive markUseful
before dep Iter
Inside dep Iter
before if
Inside if
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(X)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(A)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(C)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(C)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(D)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(C)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(A)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(B)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
^^^^^^^^^^inserting active locations^^^^^^^^^

NamedLoc(
    mSymHandle: SymHandle(Y)
    mLocal: 1
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
^^^^^^^^^^^^^^^^^^^^^^^^^
Danger Inside insertActiveSymSet
after if
Outside dep Iter
before Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
Inside Danger duaa
after danger duaa
before activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
Inside activity results for each procedure into InterActive
before printing active syms iterators retval

InterActive(
    Procedure( bar_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(C)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(D)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    Procedure( foo_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(A)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(B)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    Procedure( head_ ): 
    ActiveLocSet([ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )    
            NamedLoc(
                mSymHandle: SymHandle(Y)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            ) ] 
    )
    ActiveStmtSet([  ] 
    )
    ActiveMemRefSet([  ] 
    )
    ActiveSymSet: [ 
        SymHandle(C)
            SymHandle(D)
            SymHandle(A)
            SymHandle(B)
            SymHandle(X)
            SymHandle(Y) ] 
    mNumIterUseful: 0
    mNumIterVary: 0
)
