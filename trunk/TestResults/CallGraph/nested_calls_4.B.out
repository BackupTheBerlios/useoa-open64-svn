
Graph DGraph:

    Node 1: 
        head_::head_ [defined]

    Node 2: 
        head_::foo_ [defined]

    Edge: 1 => 2
        foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &C:0:.predef_F8, &D:0:.predef_F8)

    Edge: 1 => 2
        foo_(&X:0:anon_ptr.(1), &P:0:.predef_F8, &C:0:.predef_F8, &D:0:.predef_F8)


mCallToCalleeProcSetMap: CallHandle	 => OA_ptr<std::set<ProcHandle> > 
        foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &C:0:.predef_F8, &D:0:.predef_F8)	 => [ head_::foo_ ] 
        foo_(&X:0:anon_ptr.(1), &P:0:.predef_F8, &C:0:.predef_F8, &D:0:.predef_F8)	 => [ head_::foo_ ] 

digraph DGraph {
    node [shape=rectangle];
    1 [ label="head_::head_ [defined]" ];
    2 [ label="head_::foo_ [defined]" ];
    1 -> 2 [ label="foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &C:0:.predef_F8, &D:0:.predef_F8)" ];
    1 -> 2 [ label="foo_(&X:0:anon_ptr.(1), &P:0:.predef_F8, &C:0:.predef_F8, &D:0:.predef_F8)" ];}

mCallToCalleeProcSetMap: CallHandle	 => OA_ptr<std::set<ProcHandle> > 
        foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &C:0:.predef_F8, &D:0:.predef_F8)	 => [ head_::foo_ ] 
        foo_(&X:0:anon_ptr.(1), &P:0:.predef_F8, &C:0:.predef_F8, &D:0:.predef_F8)	 => [ head_::foo_ ] 
