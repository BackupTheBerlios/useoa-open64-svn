
========================stmt============================
 LOC 0 0 source files:	1	"/home/ramos/ANL/UseOA-Open64/TestCases/ExprTree/SinExpr.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

stmt = 

========================stmt============================

stmt = foo_(&A:0:.predef_F8, &F:0:.predef_F8, &X:0:.predef_F8, &T:0:.predef_F8)

	--Call-----------------------------------------
	  Call: [foo_(&A:0:.predef_F8, &F:0:.predef_F8, &X:0:.predef_F8, &T:0:.predef_F8)]
	----------------------------------------------
graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( A:0:.predef_F8 )

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( F:0:.predef_F8 )

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( X:0:.predef_F8 )

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( T:0:.predef_F8 )

========================stmt============================

stmt = _END()

========================stmt============================

stmt = return

========================stmt============================

stmt = return

========================stmt============================
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END

stmt = 

========================stmt============================

stmt = A:0:.predef_F8 = SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8)

	--expr----------------------------------------
	  expr = SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8)
	----------------------------------------------
graph EXPRESSION TREE:

    Node 0: ET OpNode ( SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8) )
    Edge: 
        0 => 
        Node 1: ET OpNode ( + )
        Edge: 
            1 => 
            Node 2: ET OpNode ( OPC_F8F4CVT() )
            Edge: 
                2 => 
                Node 3: ET MemRefNode ( B:0:.predef_F4 )
        Edge: 
            1 => 
            Node 5: ET MemRefNode ( A:0:.predef_F8 )

========================stmt============================

stmt = return
