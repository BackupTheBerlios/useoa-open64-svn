============================================
StmtHandle:  LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/svn/UseOA-Open64/trunk/TestCases/ExprTree/SinFuncExpr.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: foo_(&A:0:.predef_F8, &F:0:.predef_F8, &X:0:.predef_F8, &T:0:.predef_F8)

==> ExprHandle: &A:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &A:0:.predef_F8 )


==> ExprHandle: &F:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &F:0:.predef_F8 )


==> ExprHandle: &X:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &X:0:.predef_F8 )


==> ExprHandle: &T:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &T:0:.predef_F8 )


============================================
StmtHandle: _END()

============================================
StmtHandle: return

============================================
StmtHandle: return

============================================
StmtHandle: PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: A:0:.predef_F8 = SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8)/OPC_F8F4CVT(func_(&F:0:.predef_F8))

==> ExprHandle: SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8)/OPC_F8F4CVT(func_(&F:0:.predef_F8))

graph EXPRESSION TREE:

    Node 0: ET OpNode ( / )
    Edge: 
        0 => 
        Node 1: ET OpNode ( SIN(&OPC_F8F4CVT(B:0:.predef_F4)+A:0:.predef_F8) )
        Edge: 
            1 => 
            Node 2: ET OpNode ( + )
            Edge: 
                2 => 
                Node 3: ET MemRefNode ( B:0:.predef_F4 )
            Edge: 
                2 => 
                Node 4: ET MemRefNode ( A:0:.predef_F8 )
    Edge: 
        0 => 
        Node 5: ET CallNode ( func_(&F:0:.predef_F8) )


==> ExprHandle: &F:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( &F:0:.predef_F8 )


============================================
StmtHandle: return

============================================
StmtHandle: PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: RES:0:.predef_F8 = N:0:.predef_F8

==> ExprHandle: N:0:.predef_F8

graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( N:0:.predef_F8 )


============================================
StmtHandle: return (RES:0:.predef_F8)

