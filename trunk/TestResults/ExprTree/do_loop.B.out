============================================
StmtHandle:  LOC 0 0 source files:	1	"/home/malusare/AssignPair/UseOA-Open64/TestCases/AssignPair/do_loop.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END


============================================
StmtHandle: t__1:0:.predef_I4 = N:0:.predef_I4

==> ExprHandle: N:0:.predef_I4

Graph EXPRESSION TREE:

    Node 0: ET MemRefNode ( N:0:.predef_I4 )


============================================
StmtHandle: do_loop (I:0:.predef_I4<=t__1:0:.predef_I4)

==> ExprHandle: I:0:.predef_I4<=t__1:0:.predef_I4

Graph EXPRESSION TREE:

    Node 0: ET OpNode ( <= )
    Edge: 
        0 => 
        Node 1: ET MemRefNode ( I:0:.predef_I4 )
    Edge: 
        0 => 
        Node 2: ET MemRefNode ( t__1:0:.predef_I4 )


============================================
StmtHandle: I:0:.predef_I4 = 1

==> ExprHandle: 1

Graph EXPRESSION TREE:

    Node 0: ET ConstValNode ( 1 )


============================================
StmtHandle: I:0:.predef_I4 = I:0:.predef_I4+1

==> ExprHandle: I:0:.predef_I4+1

Graph EXPRESSION TREE:

    Node 0: ET OpNode ( + )
    Edge: 
        0 => 
        Node 1: ET MemRefNode ( I:0:.predef_I4 )
    Edge: 
        0 => 
        Node 2: ET ConstValNode ( 1 )


============================================
StmtHandle: J:0:.predef_I4 = J:0:.predef_I4+1

==> ExprHandle: J:0:.predef_I4+1

Graph EXPRESSION TREE:

    Node 0: ET OpNode ( + )
    Edge: 
        0 => 
        Node 1: ET MemRefNode ( J:0:.predef_I4 )
    Edge: 
        0 => 
        Node 2: ET ConstValNode ( 1 )


============================================
StmtHandle: return

