
Graph ICFG:

    Subgraph foo_::foo__0:

        Node 9: 
            ==  ICFG ENTRY_NODE 9 ==


        Node 10: 
             LOC 0 0 source files:	1	"/m_home/m_utkej/Argonne/svn/UseOA-Open64/trunk/TestCases/ICFG/functions3.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 10 ==

if (N:0:.predef_I4==1)


        Node 11: 
            ==  ICFG CFLOW_NODE 11 ==
RES:0:.predef_I4 = 1


        Node 12: 
            ==  ICFG CFLOW_NODE 12 ==
RES:0:.predef_I4 = 5


        Node 13: 
            ==  ICFG CFLOW_NODE 13 ==
return (RES:0:.predef_I4)


        Node 14: 
            ==  ICFG EXIT_NODE 14 ==


        Edge: 9 => 10
            

        Edge: 10 => 11
            

        Edge: 10 => 12
            

        Edge: 11 => 13
            

        Edge: 12 => 13
            

        Edge: 13 => 14
            


    Subgraph foo_::functiontest__1:

        Node 19: 
            ==  ICFG ENTRY_NODE 19 == (entry)


        Node 23: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 23 ==



        Node 24: 
            ==  ICFG CALL_NODE 24 ==
N:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))


        Node 26: 
            ==  ICFG RETURN_NODE 26 ==


        Node 27: 
            ==  ICFG CFLOW_NODE 27 ==
X:0:.predef_F4 = SIN(&X:0:.predef_F4)
_END()
return


        Node 28: 
            ==  ICFG CFLOW_NODE 28 == (entry)
return


        Node 29: 
            ==  ICFG EXIT_NODE 29 == (exit)


        Edge: 23 => 24
            

        Edge: 24 => 26
            CALL_RETURN

        Edge: 26 => 27
            

        Edge: 19 => 23
            

        Edge: 27 => 29
            

        Edge: 28 => 29
            


    Edge: 24 => 9
        CALL_(foo_(&N:0:.predef_I4)),style=dashed,color=red

    Edge: 14 => 26
        RETURN_(foo_(&N:0:.predef_I4)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_foo__0 {
        label="foo_::foo__0"
        9 [ label="==  ICFG ENTRY_NODE 9 ==\n" ];
        10 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 10 ==\n\nif (N:0:.predef_I4==1)\n" ];
        11 [ label="==  ICFG CFLOW_NODE 11 ==\nRES:0:.predef_I4 = 1\n" ];
        12 [ label="==  ICFG CFLOW_NODE 12 ==\nRES:0:.predef_I4 = 5\n" ];
        13 [ label="==  ICFG CFLOW_NODE 13 ==\nreturn (RES:0:.predef_I4)\n" ];
        14 [ label="==  ICFG EXIT_NODE 14 ==\n" ];
        9 -> 10 [ label="" ];
        10 -> 11 [ label="" ];
        10 -> 12 [ label="" ];
        11 -> 13 [ label="" ];
        12 -> 13 [ label="" ];
        13 -> 14 [ label="" ];
    }
    subgraph cluster_functiontest__1 {
        label="foo_::functiontest__1"
        19 [ label="==  ICFG ENTRY_NODE 19 == (entry)\n" ];
        23 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 23 ==\n\n" ];
        24 [ label="==  ICFG CALL_NODE 24 ==\nN:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))\n" ];
        26 [ label="==  ICFG RETURN_NODE 26 ==\n" ];
        27 [ label="==  ICFG CFLOW_NODE 27 ==\nX:0:.predef_F4 = SIN(&X:0:.predef_F4)\n_END()\nreturn\n" ];
        28 [ label="==  ICFG CFLOW_NODE 28 == (entry)\nreturn\n" ];
        29 [ label="==  ICFG EXIT_NODE 29 == (exit)\n" ];
        23 -> 24 [ label="" ];
        24 -> 26 [ label="CALL_RETURN" ];
        26 -> 27 [ label="" ];
        19 -> 23 [ label="" ];
        27 -> 29 [ label="" ];
        28 -> 29 [ label="" ];
    }
    24 -> 9 [ label="CALL_(foo_(&N:0:.predef_I4))",style=dashed,color=red ];
    14 -> 26 [ label="RETURN_(foo_(&N:0:.predef_I4))",style=dashed,color=blue ];}
