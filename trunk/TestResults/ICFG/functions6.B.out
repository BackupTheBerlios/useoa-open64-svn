
graph ICFG:

    subgraph bar__0:

        Node 10: 
            ==  ICFG ENTRY_NODE 10 ==


        Node 11: 
             LOC 0 0 source files:	1	"/s/parsons/c/fac/mstrout/OA/armstrong-gcc-3.3.6/UseOA-Open64/TestCases/CallGraph/functions6.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 11 ==

if (N:0:.predef_I4==1)


        Node 12: 
            ==  ICFG CFLOW_NODE 12 ==
RES:0:.predef_I4 = 1


        Node 15: 
            ==  ICFG CALL_NODE 15 ==
RES:0:.predef_I4 = TRUNC(foo_(&5))


        Node 17: 
            ==  ICFG RETURN_NODE 17 ==


        Node 26: 
            ==  ICFG CFLOW_NODE 26 ==
return (RES:0:.predef_I4)


        Node 27: 
            ==  ICFG EXIT_NODE 27 ==


        Edge: 15 => 17
            CALL_RETURN

        Edge: 10 => 11
            

        Edge: 11 => 12
            

        Edge: 11 => 15
            

        Edge: 12 => 26
            

        Edge: 17 => 26
            

        Edge: 26 => 27
            


    subgraph foo__1:

        Node 24: 
            ==  ICFG ENTRY_NODE 24 ==


        Node 25: 
            ==  ICFG EXIT_NODE 25 ==


        Node 28: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 28 ==

if (N:0:.predef_I4==1)


        Node 31: 
            ==  ICFG CALL_NODE 31 ==
RES:0:.predef_I4 = TRUNC(bar_(&1))


        Node 33: 
            ==  ICFG RETURN_NODE 33 ==


        Node 34: 
            ==  ICFG CFLOW_NODE 34 ==
RES:0:.predef_I4 = 5


        Node 35: 
            ==  ICFG CFLOW_NODE 35 ==
return (RES:0:.predef_I4)


        Edge: 31 => 33
            CALL_RETURN

        Edge: 35 => 25
            

        Edge: 24 => 28
            

        Edge: 28 => 31
            

        Edge: 28 => 34
            

        Edge: 33 => 35
            

        Edge: 34 => 35
            


    subgraph functiontest__2:

        Node 40: 
            ==  ICFG ENTRY_NODE 40 == (entry)


        Node 44: 
            PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 44 ==



        Node 45: 
            ==  ICFG CALL_NODE 45 ==
N:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))


        Node 47: 
            ==  ICFG RETURN_NODE 47 ==


        Node 48: 
            ==  ICFG CFLOW_NODE 48 ==
X:0:.predef_F4 = SIN(&X:0:.predef_F4)
_END()
return


        Node 49: 
            ==  ICFG CFLOW_NODE 49 == (entry)
return


        Node 50: 
            ==  ICFG EXIT_NODE 50 == (exit)


        Edge: 44 => 45
            

        Edge: 45 => 47
            CALL_RETURN

        Edge: 47 => 48
            

        Edge: 40 => 44
            

        Edge: 48 => 50
            

        Edge: 49 => 50
            


    Edge: 15 => 24
        CALL_(foo_(&5)),style=dashed,color=red

    Edge: 25 => 17
        RETURN_(foo_(&5)),style=dashed,color=blue

    Edge: 31 => 10
        CALL_(bar_(&1)),style=dashed,color=red

    Edge: 27 => 33
        RETURN_(bar_(&1)),style=dashed,color=blue

    Edge: 45 => 24
        CALL_(foo_(&N:0:.predef_I4)),style=dashed,color=red

    Edge: 25 => 47
        RETURN_(foo_(&N:0:.predef_I4)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_bar__0 {
        label="bar__0"
        10 [ label="==  ICFG ENTRY_NODE 10 ==\n" ];
        11 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 11 ==\n\nif (N:0:.predef_I4==1)\n" ];
        12 [ label="==  ICFG CFLOW_NODE 12 ==\nRES:0:.predef_I4 = 1\n" ];
        15 [ label="==  ICFG CALL_NODE 15 ==\nRES:0:.predef_I4 = TRUNC(foo_(&5))\n" ];
        17 [ label="==  ICFG RETURN_NODE 17 ==\n" ];
        26 [ label="==  ICFG CFLOW_NODE 26 ==\nreturn (RES:0:.predef_I4)\n" ];
        27 [ label="==  ICFG EXIT_NODE 27 ==\n" ];
        15 -> 17 [ label="CALL_RETURN" ];
        10 -> 11 [ label="" ];
        11 -> 12 [ label="" ];
        11 -> 15 [ label="" ];
        12 -> 26 [ label="" ];
        17 -> 26 [ label="" ];
        26 -> 27 [ label="" ];
    }
    subgraph cluster_foo__1 {
        label="foo__1"
        24 [ label="==  ICFG ENTRY_NODE 24 ==\n" ];
        25 [ label="==  ICFG EXIT_NODE 25 ==\n" ];
        28 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 28 ==\n\nif (N:0:.predef_I4==1)\n" ];
        31 [ label="==  ICFG CALL_NODE 31 ==\nRES:0:.predef_I4 = TRUNC(bar_(&1))\n" ];
        33 [ label="==  ICFG RETURN_NODE 33 ==\n" ];
        34 [ label="==  ICFG CFLOW_NODE 34 ==\nRES:0:.predef_I4 = 5\n" ];
        35 [ label="==  ICFG CFLOW_NODE 35 ==\nreturn (RES:0:.predef_I4)\n" ];
        31 -> 33 [ label="CALL_RETURN" ];
        35 -> 25 [ label="" ];
        24 -> 28 [ label="" ];
        28 -> 31 [ label="" ];
        28 -> 34 [ label="" ];
        33 -> 35 [ label="" ];
        34 -> 35 [ label="" ];
    }
    subgraph cluster_functiontest__2 {
        label="functiontest__2"
        40 [ label="==  ICFG ENTRY_NODE 40 == (entry)\n" ];
        44 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 44 ==\n\n" ];
        45 [ label="==  ICFG CALL_NODE 45 ==\nN:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))\n" ];
        47 [ label="==  ICFG RETURN_NODE 47 ==\n" ];
        48 [ label="==  ICFG CFLOW_NODE 48 ==\nX:0:.predef_F4 = SIN(&X:0:.predef_F4)\n_END()\nreturn\n" ];
        49 [ label="==  ICFG CFLOW_NODE 49 == (entry)\nreturn\n" ];
        50 [ label="==  ICFG EXIT_NODE 50 == (exit)\n" ];
        44 -> 45 [ label="" ];
        45 -> 47 [ label="CALL_RETURN" ];
        47 -> 48 [ label="" ];
        40 -> 44 [ label="" ];
        48 -> 50 [ label="" ];
        49 -> 50 [ label="" ];
    }
    15 -> 24 [ label="CALL_(foo_(&5))",style=dashed,color=red ];
    25 -> 17 [ label="RETURN_(foo_(&5))",style=dashed,color=blue ];
    31 -> 10 [ label="CALL_(bar_(&1))",style=dashed,color=red ];
    27 -> 33 [ label="RETURN_(bar_(&1))",style=dashed,color=blue ];
    45 -> 24 [ label="CALL_(foo_(&N:0:.predef_I4))",style=dashed,color=red ];
    25 -> 47 [ label="RETURN_(foo_(&N:0:.predef_I4))",style=dashed,color=blue ];}
