
graph ICFG:

subgraph cluster_bar__0 {
    label="bar__0"
    Node 1: 
        ==  ICFG ENTRY_NODE 1 ==


    Node 2: 
         LOC 0 0 source files:	1	"/s/parsons/c/fac/mstrout/OA/armstrong-gcc-3.3.6/UseOA-Open64/TestCases/CallGraph/functions6.f90"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 2 ==

if (N:0:.predef_I4==1)


    Node 3: 
        ==  ICFG CFLOW_NODE 3 ==
RES:0:.predef_I4 = 1


    Node 4: 
        ==  ICFG CALL_NODE 4 ==
RES:0:.predef_I4 = TRUNC(foo_(&5))


    Node 5: 
        ==  ICFG RETURN_NODE 5 ==


    Node 8: 
        ==  ICFG CFLOW_NODE 8 ==
return (RES:0:.predef_I4)


    Node 9: 
        ==  ICFG EXIT_NODE 9 ==


    Edge: 4 => 5
        

    Edge: 1 => 2
        

    Edge: 2 => 3
        

    Edge: 2 => 4
        

    Edge: 3 => 8
        

    Edge: 5 => 8
        

    Edge: 8 => 9
        

}

subgraph cluster_foo__1 {
    label="foo__1"
    Node 6: 
        ==  ICFG ENTRY_NODE 6 ==


    Node 7: 
        ==  ICFG EXIT_NODE 7 ==


    Node 10: 
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 10 ==

if (N:0:.predef_I4==1)


    Node 11: 
        ==  ICFG CALL_NODE 11 ==
RES:0:.predef_I4 = TRUNC(bar_(&1))


    Node 12: 
        ==  ICFG RETURN_NODE 12 ==


    Node 13: 
        ==  ICFG CFLOW_NODE 13 ==
RES:0:.predef_I4 = 5


    Node 14: 
        ==  ICFG CFLOW_NODE 14 ==
return (RES:0:.predef_I4)


    Edge: 11 => 12
        

    Edge: 14 => 7
        

    Edge: 6 => 10
        

    Edge: 10 => 11
        

    Edge: 10 => 13
        

    Edge: 12 => 14
        

    Edge: 13 => 14
        

}

subgraph cluster_functiontest__2 {
    label="functiontest__2"
    Node 15: 
        ==  ICFG ENTRY_NODE 15 == (entry)


    Node 16: 
        PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 16 ==



    Node 17: 
        ==  ICFG CALL_NODE 17 ==
N:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))


    Node 18: 
        ==  ICFG RETURN_NODE 18 ==


    Node 19: 
        ==  ICFG CFLOW_NODE 19 ==
X:0:.predef_F4 = SIN(&X:0:.predef_F4)
_END()
return


    Node 20: 
        ==  ICFG CFLOW_NODE 20 == (entry)
return


    Node 21: 
        ==  ICFG EXIT_NODE 21 == (exit)


    Edge: 16 => 17
        

    Edge: 17 => 18
        

    Edge: 18 => 19
        

    Edge: 15 => 16
        

    Edge: 19 => 21
        

    Edge: 20 => 21
        

}

    Edge: 4 => 6
        CALL_(foo_(&5))

    Edge: 7 => 5
        RETURN_(foo_(&5))

    Edge: 11 => 1
        CALL_(bar_(&1))

    Edge: 9 => 12
        RETURN_(bar_(&1))

    Edge: 17 => 6
        CALL_(foo_(&N:0:.predef_I4))

    Edge: 7 => 18
        RETURN_(foo_(&N:0:.predef_I4))


digraph ICFG {
    node [shape=rectangle];
subgraph cluster_bar__0 {
    label="bar__0"
    1 [ label="==  ICFG ENTRY_NODE 1 ==\n" ];
    2 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 2 ==\n\nif (N:0:.predef_I4==1)\n" ];
    3 [ label="==  ICFG CFLOW_NODE 3 ==\nRES:0:.predef_I4 = 1\n" ];
    4 [ label="==  ICFG CALL_NODE 4 ==\nRES:0:.predef_I4 = TRUNC(foo_(&5))\n" ];
    5 [ label="==  ICFG RETURN_NODE 5 ==\n" ];
    8 [ label="==  ICFG CFLOW_NODE 8 ==\nreturn (RES:0:.predef_I4)\n" ];
    9 [ label="==  ICFG EXIT_NODE 9 ==\n" ];
    4 -> 5 [ label="" ];
    1 -> 2 [ label="" ];
    2 -> 3 [ label="" ];
    2 -> 4 [ label="" ];
    3 -> 8 [ label="" ];
    5 -> 8 [ label="" ];
    8 -> 9 [ label="" ];
}

subgraph cluster_foo__1 {
    label="foo__1"
    6 [ label="==  ICFG ENTRY_NODE 6 ==\n" ];
    7 [ label="==  ICFG EXIT_NODE 7 ==\n" ];
    10 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 10 ==\n\nif (N:0:.predef_I4==1)\n" ];
    11 [ label="==  ICFG CALL_NODE 11 ==\nRES:0:.predef_I4 = TRUNC(bar_(&1))\n" ];
    12 [ label="==  ICFG RETURN_NODE 12 ==\n" ];
    13 [ label="==  ICFG CFLOW_NODE 13 ==\nRES:0:.predef_I4 = 5\n" ];
    14 [ label="==  ICFG CFLOW_NODE 14 ==\nreturn (RES:0:.predef_I4)\n" ];
    11 -> 12 [ label="" ];
    14 -> 7 [ label="" ];
    6 -> 10 [ label="" ];
    10 -> 11 [ label="" ];
    10 -> 13 [ label="" ];
    12 -> 14 [ label="" ];
    13 -> 14 [ label="" ];
}

subgraph cluster_functiontest__2 {
    label="functiontest__2"
    15 [ label="==  ICFG ENTRY_NODE 15 == (entry)\n" ];
    16 [ label="PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
==  ICFG CFLOW_NODE 16 ==\n\n" ];
    17 [ label="==  ICFG CALL_NODE 17 ==\nN:0:.predef_I4 = TRUNC(foo_(&N:0:.predef_I4))\n" ];
    18 [ label="==  ICFG RETURN_NODE 18 ==\n" ];
    19 [ label="==  ICFG CFLOW_NODE 19 ==\nX:0:.predef_F4 = SIN(&X:0:.predef_F4)\n_END()\nreturn\n" ];
    20 [ label="==  ICFG CFLOW_NODE 20 == (entry)\nreturn\n" ];
    21 [ label="==  ICFG EXIT_NODE 21 == (exit)\n" ];
    16 -> 17 [ label="" ];
    17 -> 18 [ label="" ];
    18 -> 19 [ label="" ];
    15 -> 16 [ label="" ];
    19 -> 21 [ label="" ];
    20 -> 21 [ label="" ];
}

    4 -> 6 [ label="CALL_(foo_(&5))",style=dashed,color=red ];
    7 -> 5 [ label="RETURN_(foo_(&5))",style=dashed,color=blue ];
    11 -> 1 [ label="CALL_(bar_(&1))",style=dashed,color=red ];
    9 -> 12 [ label="RETURN_(bar_(&1))",style=dashed,color=blue ];
    17 -> 6 [ label="CALL_(foo_(&N:0:.predef_I4))",style=dashed,color=red ];
    7 -> 18 [ label="RETURN_(foo_(&N:0:.predef_I4))",style=dashed,color=blue ];}
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
