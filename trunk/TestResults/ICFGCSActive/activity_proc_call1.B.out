CallContext::setMaxDegree(1

ManagerICFGCSActive: sym = head_::X, size = <8>, bytes = 0, refParam
ManagerICFGCSActive: sym = head_::F, size = <8>, bytes = 0, refParam
ManagerICFGCSActive: sym = head_::T1, size = <8>, bytes = 8
ManagerICFGCSActive: sym = head_::T2, size = <8>, bytes = 16
ManagerICFGCSActive: sym = bar_::A, size = <8>, bytes = 16, refParam
ManagerICFGCSActive: sym = bar_::B, size = <8>, bytes = 16, refParam
====================== InterActiveFortran


 ----- first, dump of ActiveStandard per Proc ----

head_::head_
ActiveTagSet = 
{not-universal, , tag(4), tag(5), tag(9), tag(10)}
ActiveSymSet = 
head_::X
head_::F
head_::T1
head_::T2
bar_::A
bar_::B
mUnknownLocActive = 0

ActiveStmtList = 

ActiveMemRefList = 

CSActiveTagSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeTagSet ==
{not-universal, , tag(4), tag(5), tag(9), tag(10)}



CSActiveSymSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeSymSet ==
	head_::X
	head_::F
	head_::T1
	head_::T2
	bar_::A
	bar_::B



===== mUnknownLocActive = 0


CSActiveStmtLists =============== 



CSActiveMemRefLists =============== 



head_::bar_
ActiveTagSet = 
{not-universal, , tag(4), tag(5)}
ActiveSymSet = 
head_::T1
head_::T2
bar_::A
bar_::B
mUnknownLocActive = 0

ActiveStmtList = 

ActiveMemRefList = 

CSActiveTagSets =============== 

<mMaxDegree: 1, CallContext: 
	bar_(&T1:0:.predef_F8, &T2:0:.predef_F8)
>
activeTagSet ==
{not-universal, , tag(4), tag(5)}



CSActiveSymSets =============== 

<mMaxDegree: 1, CallContext: 
	bar_(&T1:0:.predef_F8, &T2:0:.predef_F8)
>
activeSymSet ==
	head_::T1
	head_::T2
	bar_::A
	bar_::B



===== mUnknownLocActive = 0


CSActiveStmtLists =============== 



CSActiveMemRefLists =============== 





 ----- then, regular InterActiveFortran dump -----

	ActiveSymList
		head_::X, active = 1
		head_::F, active = 1
		head_::T1, active = 1
		head_::T2, active = 1
		bar_::A, active = 1
		bar_::B, active = 1
	getActiveSizeInBytes() = 16

InterActiveFortran(
    Procedure( head_::head_ ): 
    ActiveStmtSet([  ] 
    )
    ActiveTagSet => MemRefExprSet([ 
            Tag(
                mTagID: 4
            )    
            Tag(
                mTagID: 5
            )    
            Tag(
                mTagID: 9
            )    
            Tag(
                mTagID: 10
            ) ] 
    )
    Procedure( head_::bar_ ): 
    ActiveStmtSet([  ] 
    )
    ActiveTagSet => MemRefExprSet([ 
            Tag(
                mTagID: 4
            )    
            Tag(
                mTagID: 5
            ) ] 
    )
    ActiveSymSet: [ 
        SymHandle(head_::X)
            SymHandle(head_::F)
            SymHandle(head_::T1)
            SymHandle(head_::T2)
            SymHandle(bar_::A)
            SymHandle(bar_::B) ] 
    mNumIterUseful: 2
    mNumIterVary: 2
    mNumIterActive: 2
    mSizeInBytes: 16
)
