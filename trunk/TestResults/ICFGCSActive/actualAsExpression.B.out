CallContext::setMaxDegree(1

====================== InterActiveFortran


 ----- first, dump of ActiveStandard per Proc ----

main_::main_
ActiveTagSet = 
{not-universal, , tag(1), tag(3), tag(4)}
ActiveSymSet = 
main_::N
main_::L
main_::X
mUnknownLocActive = 0

ActiveStmtList = 

ActiveMemRefList = 

CSActiveTagSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeTagSet ==
{not-universal, , tag(1), tag(3), tag(4)}



CSActiveSymSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeSymSet ==
	main_::N
	main_::L
	main_::X



===== mUnknownLocActive = 0


CSActiveStmtLists =============== 



CSActiveMemRefLists =============== 



main_::sub1_
ActiveTagSet = 
{not-universal, , tag(1), tag(7)}
ActiveSymSet = 
main_::N
sub1_::F
mUnknownLocActive = 0

ActiveStmtList = 

ActiveMemRefList = 

CSActiveTagSets =============== 

<mMaxDegree: 1, CallContext: 
	sub1_(&L:0:.predef_I4+1)
>
activeTagSet ==
{not-universal, , tag(1), tag(7)}



CSActiveSymSets =============== 

<mMaxDegree: 1, CallContext: 
	sub1_(&L:0:.predef_I4+1)
>
activeSymSet ==
	main_::N
	sub1_::F



===== mUnknownLocActive = 0


CSActiveStmtLists =============== 



CSActiveMemRefLists =============== 





 ----- then, regular InterActiveFortran dump -----

	ActiveSymList
		main_::N hval = 9906672, active = 1
		main_::L hval = 9948376, active = 1
		main_::X hval = 9948456, active = 1
		sub1_::F hval = 9965848, active = 1
	getActiveSizeInBytes() = 0

InterActiveFortran(
    Procedure( main_::main_ ): 
    ActiveStmtSet([  ] 
    )
    ActiveTagSet => MemRefExprSet([ 
            Tag(
                mTagID: 1
            )    
            Tag(
                mTagID: 3
            )    
            Tag(
                mTagID: 4
            ) ] 
    )
    Procedure( main_::sub1_ ): 
    ActiveStmtSet([  ] 
    )
    ActiveTagSet => MemRefExprSet([ 
            Tag(
                mTagID: 1
            )    
            Tag(
                mTagID: 7
            ) ] 
    )
    ActiveSymSet: [ 
        SymHandle(main_::N)
            SymHandle(main_::L)
            SymHandle(main_::X)
            SymHandle(sub1_::F) ] 
    mNumIterUseful: 2
    mNumIterVary: 2
)
