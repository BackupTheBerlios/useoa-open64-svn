CallContext::setMaxDegree(1

ManagerICFGCSActive: sym = head_::X, size = <8>, bytes = 0, refParam
ManagerICFGCSActive: sym = head_::Y, size = <8>, bytes = 0, refParam
ManagerICFGCSActive: sym = head_::A, size = <8>, bytes = 8
ManagerICFGCSActive: sym = head_::B, size = <8>, bytes = 16
ManagerICFGCSActive: sym = head_::C, size = <8>, bytes = 24
====================== InterActiveFortran


 ----- first, dump of ActiveStandard per Proc ----

head_::head_
ActiveTagSet = 
{not-universal, , tag(3), tag(4), tag(5), tag(6), tag(7)}
ActiveSymSet = 
head_::X
head_::Y
head_::A
head_::B
head_::C
mUnknownLocActive = 0

ActiveStmtList = 

ActiveMemRefList = 

CSActiveTagSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeTagSet ==
{not-universal, , tag(3), tag(4), tag(5), tag(6), tag(7)}



CSActiveSymSets =============== 

<mMaxDegree: 1, CallContext: 
	CallHandle(0)
>
activeSymSet ==
	head_::X
	head_::Y
	head_::A
	head_::B
	head_::C



===== mUnknownLocActive = 0


CSActiveStmtLists =============== 



CSActiveMemRefLists =============== 





 ----- then, regular InterActiveFortran dump -----

	ActiveSymList
		head_::X, active = 1
		head_::Y, active = 1
		head_::A, active = 1
		head_::B, active = 1
		head_::C, active = 1
	getActiveSizeInBytes() = 24

InterActiveFortran(
    Procedure( head_::head_ ): 
    ActiveStmtSet([  ] 
    )
    ActiveTagSet => MemRefExprSet([ 
            Tag(
                mTagID: 3
            )    
            Tag(
                mTagID: 4
            )    
            Tag(
                mTagID: 5
            )    
            Tag(
                mTagID: 6
            )    
            Tag(
                mTagID: 7
            ) ] 
    )
    ActiveSymSet: [ 
        SymHandle(head_::X)
            SymHandle(head_::Y)
            SymHandle(head_::A)
            SymHandle(head_::B)
            SymHandle(head_::C) ] 
    mNumIterUseful: 2
    mNumIterVary: 2
    mNumIterActive: 2
    mSizeInBytes: 24
)
