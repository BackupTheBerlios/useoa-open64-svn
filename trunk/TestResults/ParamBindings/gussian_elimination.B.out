
ParamBindings(
    mCallerToCalleeMap: CallHandle	 => std::map<ProcHandle, std::map<MemRefHandle, SymHandle> > 
            CallHandle(gaussian_elimination_(&0:A:0:anon_ptr., &N:0:.predef_I4, &0:B:0:anon_ptr., &0:X:0:anon_ptr., &SINGULAR:0:.log.4))	 => 
            second: ProcHandle	 => std::map<MemRefHandle, SymHandle> 
                    ProcHandle(precisions_::gaussian_elimination_)	 => 
                    second: MemRefHandle	 => SymHandle
                            MemRefHandle(&0:A:0:anon_ptr.)	 => SymHandle(gaussian_elimination_::A)
                            MemRefHandle(&N:0:.predef_I4)	 => SymHandle(gaussian_elimination_::N)
                            MemRefHandle(&0:B:0:anon_ptr.)	 => SymHandle(gaussian_elimination_::B)
                            MemRefHandle(&0:X:0:anon_ptr.)	 => SymHandle(gaussian_elimination_::X)
                            MemRefHandle(&SINGULAR:0:.log.4)	 => SymHandle(gaussian_elimination_::SINGULAR)



    mCalleeToCallerMap: CallHandle	 => std::map<SymHandle, MemRefHandle> 
            CallHandle(gaussian_elimination_(&0:A:0:anon_ptr., &N:0:.predef_I4, &0:B:0:anon_ptr., &0:X:0:anon_ptr., &SINGULAR:0:.log.4))	 => 
            second: SymHandle	 => MemRefHandle
                    SymHandle(gaussian_elimination_::A)	 => MemRefHandle(&0:A:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::N)	 => MemRefHandle(&N:0:.predef_I4)
                    SymHandle(gaussian_elimination_::B)	 => MemRefHandle(&0:B:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::X)	 => MemRefHandle(&0:X:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::SINGULAR)	 => MemRefHandle(&SINGULAR:0:.log.4)


    mProcToFormalSetMap: ProcHandle	 => OA_ptr<std::set<SymHandle> >
            ProcHandle(precisions_::gaussian_elimination_)	 => [ SymHandle(gaussian_elimination_::A)    SymHandle(gaussian_elimination_::N)    SymHandle(gaussian_elimination_::B)    SymHandle(gaussian_elimination_::X)    SymHandle(gaussian_elimination_::SINGULAR) ] 

    mCallToActualSetMap: CallHandle	 => OA_ptr<std::set<MemRefHandle> >
            CallHandle(gaussian_elimination_(&0:A:0:anon_ptr., &N:0:.predef_I4, &0:B:0:anon_ptr., &0:X:0:anon_ptr., &SINGULAR:0:.log.4))	 => [ MemRefHandle(&0:A:0:anon_ptr.)    MemRefHandle(&N:0:.predef_I4)    MemRefHandle(&0:B:0:anon_ptr.)    MemRefHandle(&0:X:0:anon_ptr.)    MemRefHandle(&SINGULAR:0:.log.4) ] 

    mCallToExprListMap: CallHandle	 => OA_ptr<std::list<ExprHandle>
            CallHandle(gaussian_elimination_(&0:A:0:anon_ptr., &N:0:.predef_I4, &0:B:0:anon_ptr., &0:X:0:anon_ptr., &SINGULAR:0:.log.4))	 => [ ExprHandle(&0:A:0:anon_ptr.)    ExprHandle(&N:0:.predef_I4)    ExprHandle(&0:B:0:anon_ptr.)    ExprHandle(&0:X:0:anon_ptr.)    ExprHandle(&SINGULAR:0:.log.4) ] 

    mExprToTreeMap: ExprHandle	 => OA_ptr<ExprTree>
            ExprHandle(&0:A:0:anon_ptr.)	 => 
            graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &0:A:0:anon_ptr. )

            ExprHandle(&N:0:.predef_I4)	 => 
            graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &N:0:.predef_I4 )

            ExprHandle(&0:B:0:anon_ptr.)	 => 
            graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &0:B:0:anon_ptr. )

            ExprHandle(&0:X:0:anon_ptr.)	 => 
            graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &0:X:0:anon_ptr. )

            ExprHandle(&SINGULAR:0:.log.4)	 => 
            graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &SINGULAR:0:.log.4 )


    mCallToFormalToActualMap: CallHandle	 => SymToExprHandleMap
            CallHandle(gaussian_elimination_(&0:A:0:anon_ptr., &N:0:.predef_I4, &0:B:0:anon_ptr., &0:X:0:anon_ptr., &SINGULAR:0:.log.4))	 => 
            symToExprMap: SymHandle	 => ExprHandle
                    SymHandle(gaussian_elimination_::A)	 => ExprHandle(&0:A:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::N)	 => ExprHandle(&N:0:.predef_I4)
                    SymHandle(gaussian_elimination_::B)	 => ExprHandle(&0:B:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::X)	 => ExprHandle(&0:X:0:anon_ptr.)
                    SymHandle(gaussian_elimination_::SINGULAR)	 => ExprHandle(&SINGULAR:0:.log.4)


)
