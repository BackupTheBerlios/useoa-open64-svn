
ParamBindings(
    mCallerToCalleeMap: CallHandle	 => std::map<ProcHandle, std::map<MemRefHandle, SymHandle> > 
            CallHandle(foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &Y:0:anon_ptr.(1)))	 => 
            second: ProcHandle	 => std::map<MemRefHandle, SymHandle> 
                    ProcHandle(head_::foo_)	 => 
                    second: MemRefHandle	 => SymHandle
                            MemRefHandle(&X:0:anon_ptr.(1))	 => SymHandle(foo_::A)
                            MemRefHandle(&X:0:anon_ptr.(2))	 => SymHandle(foo_::B)
                            MemRefHandle(&Y:0:anon_ptr.(1))	 => SymHandle(foo_::C)


            CallHandle(bar_(&B:0:.predef_F8))	 => 
            second: ProcHandle	 => std::map<MemRefHandle, SymHandle> 
                    ProcHandle(head_::bar_)	 => 
                    second: MemRefHandle	 => SymHandle
                            MemRefHandle(&B:0:.predef_F8)	 => SymHandle(bar_::A)



    mCalleeToCallerMap: CallHandle	 => std::map<SymHandle, MemRefHandle> 
            CallHandle(foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &Y:0:anon_ptr.(1)))	 => 
            second: SymHandle	 => MemRefHandle
                    SymHandle(foo_::A)	 => MemRefHandle(&X:0:anon_ptr.(1))
                    SymHandle(foo_::B)	 => MemRefHandle(&X:0:anon_ptr.(2))
                    SymHandle(foo_::C)	 => MemRefHandle(&Y:0:anon_ptr.(1))

            CallHandle(bar_(&B:0:.predef_F8))	 => 
            second: SymHandle	 => MemRefHandle
                    SymHandle(bar_::A)	 => MemRefHandle(&B:0:.predef_F8)


    mProcToFormalSetMap: ProcHandle	 => OA_ptr<std::set<SymHandle> >
            ProcHandle(head_::head_)	 => [ SymHandle(head_::X)    SymHandle(head_::Y) ] 
            ProcHandle(head_::foo_)	 => [ SymHandle(foo_::A)    SymHandle(foo_::B)    SymHandle(foo_::C) ] 
            ProcHandle(head_::bar_)	 => [ SymHandle(bar_::A) ] 

    mCallToActualSetMap: CallHandle	 => OA_ptr<std::set<MemRefHandle> >
            CallHandle(foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &Y:0:anon_ptr.(1)))	 => [ MemRefHandle(&X:0:anon_ptr.(1))    MemRefHandle(&X:0:anon_ptr.(2))    MemRefHandle(&Y:0:anon_ptr.(1)) ] 
            CallHandle(bar_(&B:0:.predef_F8))	 => [ MemRefHandle(&B:0:.predef_F8) ] 

    mCallToExprListMap: CallHandle	 => OA_ptr<std::list<ExprHandle>
            CallHandle(foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &Y:0:anon_ptr.(1)))	 => [ ExprHandle(&X:0:anon_ptr.(1))    ExprHandle(&X:0:anon_ptr.(2))    ExprHandle(&Y:0:anon_ptr.(1)) ] 
            CallHandle(bar_(&B:0:.predef_F8))	 => [ ExprHandle(&B:0:.predef_F8) ] 

    mExprToTreeMap: ExprHandle	 => OA_ptr<ExprTree>
            ExprHandle(&X:0:anon_ptr.(1))	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &X:0:anon_ptr.(1) )

            ExprHandle(&X:0:anon_ptr.(2))	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &X:0:anon_ptr.(2) )

            ExprHandle(&Y:0:anon_ptr.(1))	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &Y:0:anon_ptr.(1) )

            ExprHandle(&B:0:.predef_F8)	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &B:0:.predef_F8 )


    mCallToFormalToActualMap: CallHandle	 => SymToExprHandleMap
            CallHandle(foo_(&X:0:anon_ptr.(1), &X:0:anon_ptr.(2), &Y:0:anon_ptr.(1)))	 => 
            symToExprMap: SymHandle	 => ExprHandle
                    SymHandle(foo_::A)	 => ExprHandle(&X:0:anon_ptr.(1))
                    SymHandle(foo_::B)	 => ExprHandle(&X:0:anon_ptr.(2))
                    SymHandle(foo_::C)	 => ExprHandle(&Y:0:anon_ptr.(1))

            CallHandle(bar_(&B:0:.predef_F8))	 => 
            symToExprMap: SymHandle	 => ExprHandle
                    SymHandle(bar_::A)	 => ExprHandle(&B:0:.predef_F8)


)
