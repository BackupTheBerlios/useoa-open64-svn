
ParamBindings(
    mCallerToCalleeMap: CallHandle	 => std::map<ProcHandle, std::map<MemRefHandle, SymHandle> > 
            CallHandle(swap_(&0:A:0:anon_ptr., &0:B:0:anon_ptr.))	 => 
            second: ProcHandle	 => std::map<MemRefHandle, SymHandle> 
                    ProcHandle(ch2610_::swap_)	 => 
                    second: MemRefHandle	 => SymHandle
                            MemRefHandle(&0:A:0:anon_ptr.)	 => SymHandle(swap_::X)
                            MemRefHandle(&0:B:0:anon_ptr.)	 => SymHandle(swap_::Y)



    mCalleeToCallerMap: CallHandle	 => std::map<SymHandle, MemRefHandle> 
            CallHandle(swap_(&0:A:0:anon_ptr., &0:B:0:anon_ptr.))	 => 
            second: SymHandle	 => MemRefHandle
                    SymHandle(swap_::X)	 => MemRefHandle(&0:A:0:anon_ptr.)
                    SymHandle(swap_::Y)	 => MemRefHandle(&0:B:0:anon_ptr.)


    mProcToFormalSetMap: ProcHandle	 => OA_ptr<std::set<SymHandle> >
            ProcHandle(ch2610_::swap_)	 => [ SymHandle(swap_::X)    SymHandle(swap_::Y) ] 

    mCallToActualSetMap: CallHandle	 => OA_ptr<std::set<MemRefHandle> >
            CallHandle(swap_(&0:A:0:anon_ptr., &0:B:0:anon_ptr.))	 => [ MemRefHandle(&0:A:0:anon_ptr.)    MemRefHandle(&0:B:0:anon_ptr.) ] 

    mCallToExprListMap: CallHandle	 => OA_ptr<std::list<ExprHandle>
            CallHandle(swap_(&0:A:0:anon_ptr., &0:B:0:anon_ptr.))	 => [ ExprHandle(&0:A:0:anon_ptr.)    ExprHandle(&0:B:0:anon_ptr.) ] 

    mExprToTreeMap: ExprHandle	 => OA_ptr<ExprTree>
            ExprHandle(&0:A:0:anon_ptr.)	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &0:A:0:anon_ptr. )

            ExprHandle(&0:B:0:anon_ptr.)	 => 
            Graph EXPRESSION TREE:

                Node 0: ET MemRefNode ( &0:B:0:anon_ptr. )


    mCallToFormalToActualMap: CallHandle	 => SymToExprHandleMap
            CallHandle(swap_(&0:A:0:anon_ptr., &0:B:0:anon_ptr.))	 => 
            symToExprMap: SymHandle	 => ExprHandle
                    SymHandle(swap_::X)	 => ExprHandle(&0:A:0:anon_ptr.)
                    SymHandle(swap_::Y)	 => ExprHandle(&0:B:0:anon_ptr.)


)
