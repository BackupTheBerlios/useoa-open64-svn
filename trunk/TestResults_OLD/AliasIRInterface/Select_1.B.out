
PROCEDURE = { < ProcHandle("head_::head_"), SymHandle("head_::head_") > }
    FORMALS = {
        [
            < 0, SymHandle("head_::X") >
            < 1, SymHandle("head_::Y") >
        ] }
    MEMREFEXPRS = { StmtHandle(" LOC 0 0 source files:	1	"/home/malusare/rename/UseOA-Open64/TestCases/Alias/Select_1.f"
PRAGMA 0 190 <2,1,X> 0 (0x0) # OPENAD_INDEPENDENT
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 189 <2,2,Y> 0 (0x0) # OPENAD_DEPENDENT
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 188 <1,21,"Template_ad_template.f"> 0 (0x0) # OPENAD_XXX
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("I:0:.predef_I4 = 1") =>
        [
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("head_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:anon_ptr.(1) =     2.000000") =>
        [
            MemRefHandle("Y:0:anon_ptr.(1)") => 
                SubSetRef( DEF, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
        ] }
    MEMREFEXPRS = { StmtHandle("select_expr_temp_0:0:.predef_I4 = I:0:.predef_I4") =>
        [
            MemRefHandle("select_expr_temp_0:0:.predef_I4") => 
                NamedRef( DEF, SymHandle("head_::select_expr_temp_0"))
            MemRefHandle("I:0:.predef_I4") => 
                NamedRef( USE, SymHandle("head_::I"))
        ] }
    MEMREFEXPRS = { StmtHandle("SWITCH 2 1
") =>
        [
            MemRefHandle("select_expr_temp_0:0:.predef_I4") => 
                NamedRef( USE, SymHandle("head_::select_expr_temp_0"))
        ] }
    MEMREFEXPRS = { StmtHandle("CASEGOTO L2 1
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("CASEGOTO L3 2
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("GOTO L4
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("LABEL L2 0
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:anon_ptr.(1) = 0:X:0:anon_ptr.(1)") =>
        [
            MemRefHandle("Y:0:anon_ptr.(1)") => 
                SubSetRef( DEF, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
            MemRefHandle("0:X:0:anon_ptr.(1)") => 
                SubSetRef( USE, Deref( USE, NamedRef( USE, SymHandle("head_::X")), 1))
        ] }
    MEMREFEXPRS = { StmtHandle("GOTO L1
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("LABEL L3 0
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:anon_ptr.(1) = 0:X:0:anon_ptr.(1)") =>
        [
            MemRefHandle("Y:0:anon_ptr.(1)") => 
                SubSetRef( DEF, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
            MemRefHandle("0:X:0:anon_ptr.(1)") => 
                SubSetRef( USE, Deref( USE, NamedRef( USE, SymHandle("head_::X")), 1))
        ] }
    MEMREFEXPRS = { StmtHandle("GOTO L1
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("LABEL L4 0
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:anon_ptr.(1) = 0:X:0:anon_ptr.(1)") =>
        [
            MemRefHandle("Y:0:anon_ptr.(1)") => 
                SubSetRef( DEF, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
            MemRefHandle("0:X:0:anon_ptr.(1)") => 
                SubSetRef( USE, Deref( USE, NamedRef( USE, SymHandle("head_::X")), 1))
        ] }
    MEMREFEXPRS = { StmtHandle("LABEL L1 0
") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("Y:0:anon_ptr.(1) = 0:Y:0:anon_ptr.(1)*0:Y:0:anon_ptr.(1)") =>
        [
            MemRefHandle("Y:0:anon_ptr.(1)") => 
                SubSetRef( DEF, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
            MemRefHandle("0:Y:0:anon_ptr.(1)") => 
                SubSetRef( USE, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
            MemRefHandle("0:Y:0:anon_ptr.(1)") => 
                SubSetRef( USE, Deref( USE, NamedRef( USE, SymHandle("head_::Y")), 1))
        ] }
    MEMREFEXPRS = { StmtHandle("return") =>
        [
        ] }
    LOCATION = { < SymHandle("head_::head_"), not local > }
    LOCATION = { < SymHandle("head_::X"), local > }
    LOCATION = { < SymHandle("head_::Y"), local > }
    LOCATION = { < SymHandle("head_::I"), local > }
    LOCATION = { < SymHandle("head_::select_expr_temp_0"), local > }
