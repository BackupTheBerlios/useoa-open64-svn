
InterUseful(
    mProcToUsefulMap: ProcHandle	 => UsefulStandard
            ProcHandle(head_)	 => 
            mNumIter(0
            )
            mDepLocSet([ 
                    NamedLoc(
                        mSymHandle: SymHandle(Y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
            )
            mStmtToInUsefulSetMap: StmtHandle	 => InUsefulSet
                    StmtHandle( LOC 0 0 source files:	1	"/home/kreaseck/OPEN64/UseOA-Open64/TestCases/Activity/simple3np.f"
PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(W)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        )    
                        NamedLoc(
                            mSymHandle: SymHandle(X)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(A:0:.predef_F8 = W:0:.predef_F8+X:0:.predef_F8)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(W)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        )    
                        NamedLoc(
                            mSymHandle: SymHandle(X)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(B:0:.predef_F8 = A:0:.predef_F8)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(A)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(C:0:.predef_F8 = W:0:.predef_F8+    2.000000000000000)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(A)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        )    
                        NamedLoc(
                            mSymHandle: SymHandle(B)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(Z:0:.predef_F8 = A:0:.predef_F8+    4.000000000000000-C:0:.predef_F8)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(A)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        )    
                        NamedLoc(
                            mSymHandle: SymHandle(B)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(Y:0:.predef_F8 = A:0:.predef_F8+B:0:.predef_F8*    3.000000000000000)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(A)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        )    
                        NamedLoc(
                            mSymHandle: SymHandle(B)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 
                    StmtHandle(return)	 => [ 
                        NamedLoc(
                            mSymHandle: SymHandle(Y)
                            mLocal: 1
                            mFullOverlap: [  ] 
                            mPartOverlap: [  ] 
                        ) ] 


)

mInActive: StmtHandle	 => InActiveLocDFSet
        StmtHandle(PRAGMA 0 120 <null-st> 0 (0x0) # PREAMBLE_END
)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(A:0:.predef_F8 = W:0:.predef_F8+X:0:.predef_F8)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(X)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(B:0:.predef_F8 = A:0:.predef_F8)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(A)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(C:0:.predef_F8 = W:0:.predef_F8+    2.000000000000000)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(A)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
    
            NamedLoc(
                mSymHandle: SymHandle(B)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(Z:0:.predef_F8 = A:0:.predef_F8+    4.000000000000000-C:0:.predef_F8)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(A)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
    
            NamedLoc(
                mSymHandle: SymHandle(B)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(Y:0:.predef_F8 = A:0:.predef_F8+B:0:.predef_F8*    3.000000000000000)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(A)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
    
            NamedLoc(
                mSymHandle: SymHandle(B)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
        StmtHandle(return)	 => [ 
            NamedLoc(
                mSymHandle: SymHandle(Y)
                mLocal: 1
                mFullOverlap: [  ] 
                mPartOverlap: [  ] 
            )
 ] 
